{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SEDOS Documentation","text":"<p>Welcome to the documentation of the SEDOS project! We developed an open-source model structure taking into account the relevant future technologies  for electricity, heat, other conversions, transport and industry in a sector-coupled energy world.  We set a strong focus on a streamlined data management process that fosters the transparency and reproducibility of the open source structure. </p> <p>The documentation is structured in the following four main parts:</p> <ol> <li>Model Structure</li> <li>Reference Dataset</li> <li>Model Application</li> <li>Developer Instructions</li> </ol> Just here for the data? <p>Find the SEDOS Reference Dataset on the Databus or the OpenEnergyPlatform</p> How to cite our work? <p>In case you use our model structure and the related data in a scientific publication we kindly ask you to cite our  publications listed in the Further Reading section.</p> Latest documentation version <p> The documentation will be steadily improved. Press <code>CTRL + F5</code> to refresh your browser's cache and load the latest version of the documentation </p> <p>Use the search bar to find information quicker!</p>"},{"location":"glossary/","title":"Glossary","text":"<p>Quick reference for tools.</p> Symbol Tool Abbreviation Documentation OpenEnergyPlatform OEP  docs  OEMetadata OEM  docs  OEdatamodel OED  docs  OEdatamodel-API  docs  oemetadata builder \ud83c\udf20 databus \ud83d\udcd9 Prot\u00e9g\u00e9 docs"},{"location":"publications/","title":"Further Reading","text":"<p>In case you use our model structure and the related data in a scientific publication we kindly request you to cite one of our open-access publications:</p> <ul> <li>Reveron Baecker, Beneharo, et al. \"Comprehensive and open model structure for the design of future energy systems with sector coupling.\"  Renewable and Sustainable Energy Transition (2024): 100094. DOI: https://doi.org/10.1016/j.rset.2024.100094</li> <li>M\u00fcller, Gian, et al. \"The costs of future energy technologies: A comprehensive review of power-to-X processes\" Journal of CO2 Utilization (2025): 103019. DOI: https://doi.org/10.1016/j.jcou.2025.103019</li> </ul>"},{"location":"developer/faq/","title":"Frequently Asked Questions (FAQ)","text":"<p>This is the FAQ section. It will be updated from the Questions from the SEDOS Matrix Chat.</p>"},{"location":"developer/faq/#data#model#usage","title":"Data model usage","text":"<p>This section centers around the data model usage.</p> <ol> <li> I am currently unsure what I should enter for OEP token. Have I overlooked any instructions? <ul> <li>You can find your API-Token in your OEP profile -&gt; in the top-right corner of the OEP website -&gt; under your   name -&gt; settings -&gt; API-Token. See here</li> </ul> </li> </ol>"},{"location":"developer/faq/#scalar#data","title":"Scalar data","text":"<ol> <li> Why do I get an error when uploading my CSV to OEP ? <ul> <li>The double-quotes of the JSONs were unfortunately not correct   TODO: @FELIX - Was ist die solution hier???</li> </ul> </li> <li> How to connect data points with sources? <p>Question: Can I simply enter 'investment_cost': {'Bibtex X', 'Bibtex Y', 'Bibtex Z'} in the \"source\"  column to achieve an assignment to the values [600, 700, 500-800]?</p> <p>Answer: Specify a dict in the source column with a list as value: {'investment_costs': 'Bibtex X,  Bibtex Y, Bibtex Z'} in the order of related data points. </p> </li> <li> Where is the difference between column type \"float\" and \"float array\"? <p>Answer: The table below shows the expected column formatting:</p> float float array 23.44 [1.24, 3.44] 23 [5.3, 100.5,10.4] 10.3 [10.5, 23] <p>When a table on the OEP is created the column type cannot be changed anymore.   If you want to add data rows that contain bandwidths in the future, you should choose the column type   \"float array\".</p> </li> </ol>"},{"location":"developer/faq/#timeseries#data","title":"Timeseries data","text":""},{"location":"developer/faq/#metadata","title":"Metadata","text":"<ol> <li> Why do I get an error when registering an OEP table with my metadata? <p>This can have many reasons. Please check, if:        </p> <ul> <li> <p>The last entry in a dictionary has no <code>,</code> (comma) behind the value. Try to format your JSON in Notepad++   before uploading. If it passes the error will not occur.</p> </li> <li> <p>\"id\": null, - The key wasn't there</p> </li> <li> <p>\"description\" key wasn't there - every column needs a description key. It can be <code>null</code> though.</p> </li> <li> <p>\"name\": \"model_draft.hea_hh_heater_boil_dual_biomass\", - it must be \"model_draft\" and not   \"model-draft\". See here </p> </li> <li> <p>The double-quotes of the JSONs were unfortunately not correct</p> </li> <li> <p>\"type\": \"string\", - string with small s; and not \"type\": \"String\"</p> </li> </ul> </li> <li> Do the resources/schema/fields have to be in the correct order, or does it not matter? <p>Answer: The order of the fields must be the same as the order of the columns in the CSV.</p> </li> <li> If a document does not have a licence, does it automatically has a CC-BY licence or a copyright? <p>Answer: If no licence is given, copyright applies. Follow this pattern for documentation.</p> </li> </ol>"},{"location":"developer/faq/#other","title":"Other","text":"<ol> <li> What do \"f\" and \"p\" mean in the commodities? <p>Answer: This distinguishes fuel-specific emissions (\"f\") from process-specific emissions (\"p\"). This is mainly relevant for some industrial processes.</p> </li> <li> My process-table-name and parameter names contain hyphens <code>-</code>, is that allowed? <p>Answer: No, in neither process-table-name or parameter nameshyphens <code>-</code> are allowed. Please stick to the naming conventions</p> </li> <li> In which form should the sources be entered in the CSV tables? <p>Answer: Please set your bibtexkey as the following pattern:  (AP-number)(author)(year) <pre><code>{'capacity_e_inst': '8Kraft2021b, 8ADAC2023', 'capacity_tra_connection_flex_max': '8Kraft2021b, 8ADAC2023', 'capacity_tra_vehicles_inst': '8S&amp;PG2023', 'cost_fix_tra': '8Kraft2023, 8ADAC2023, 8ADAC2023b', 'cost_inv_tra': '8Kraft2021b, 8ADAC2023', 'cost_var': '8Kraft2023, 8ADAC2023, 8ADAC2023b', 'efficiency_sto_in': '8Keil2017', 'efficiency_sto_out': '8Keil2017', 'efficiency_tra_electrical': '8Kraft2021b, 8ADAC2023', 'efficiency_tra_g2v': '8RuckeSchoe2022', 'efficiency_tra_v2g': '8RuckeSchoe2022', 'lifetime': '8Kraft2011', 'mileage': '8BaumeHautz2014, 8Progn2021', 'occupancy_rate': '8infas2018, 8AdolfBalze2014', 'sto_init': 'ownAssumption', 'sto_self_discharge': '8XuBehre2023'}\n</code></pre>  When you have multiple sources within a bandwidth, just separate the source by comma, as shown above.</p> </li> <li> Should the unit of percent be specified in the metadata as in the Parameter_Set sheet on BWSync with \"%\" or as described in the AP1-pad as \"percent\" ( 3. [E] \"unit\": \"percent\", [0,100])? <p>Answer: In the metadata you should use the symbol <code>%</code>. (Group decision -&gt; more convenient)</p> </li> <li> Is it problematic that all data uploaded there can be viewed without restriction before our publication? <p>Answer: When uploading your data to the OEP it is still listed as a \"draft\". This means that although they are already available for viewing, they are not prominently displayed (this only happens after a peer review). As long as the data is not published by us, nobody will accidentally come across it. But it is not impossible.</p> </li> <li> Do the SEDOS-gits runs on an RLI or a German server? <p>Answer: Our SEDOS repos are all on GitHub.com right now.  The data is stored on the OpenEnergyPlatform, the website only takes the data and forwards it to the OEP and also registers it on the Databus (the data is only linked there). The OEP itself is located on a server at the University of Magdeburg.</p> </li> </ol>"},{"location":"developer/how_to_contribute_data/","title":"How to contribute data?","text":"<p>The following instructions will guide you through the process of contributing data in the SEDOS project. Hyperlinks direct you to more detailed information regarding the subject.</p> <p> An example showing the  final result of the individual steps is used to clarify the instructions.</p>"},{"location":"developer/how_to_contribute_data/#1#create#input#data#tables","title":"1. Create input data tables","text":"<ul> <li>Collect and preprocess data into the tabular oedatamodel-parameter (scalar or timeseries) thereby following the input data conventions</li> <li>Store data sources in BIB-file and fill Bibtex-keys in \"source\"-column of the data table.</li> <li>Note timeseries data and scalar data are stored in two different tables</li> </ul> <p> Result: scalar &amp; timeseries csv</p>"},{"location":"developer/how_to_contribute_data/#2#create#metadata","title":"2. Create metadata","text":"<ul> <li>Create the metadata according to the OEMetadata v.1.5.1 for each data table</li> <li>Use the scalar meta template and the timeseries meta template to build your metadata</li> <li>Use the oemetadata builder to create and edit your metadata <ul> <li>copy scalar/timeseries meta template</li> <li>click on blue button \"Edit JSON\" </li> <li>click in opening window, with CTRL+A select all and paste scalar/timeseries meta template</li> <li>click \"save\" to confirm</li> </ul> </li> <li>Fill in as many keys as possible, but at least the minimum required metadata information</li> <li>Annotate the keys <code>subject</code>, <code>isAbout</code> and/or <code>valueReference</code> with useful ontological concepts using the oemetadata builder <ul> <li>go to the column you want to annotate</li> <li>click on blue button \"Add isAbout\" or \"Add Value reference\" or \"Add Subject\"</li> <li>click into the <code>name</code> line </li> <li>type in the concept you're looking for</li> <li>choose a suitable ontology concept from the dropdown menu</li> <li>click to confirm</li> <li></li> </ul> </li> <li>List all data sources in the form of Bibtex-keys under the <code>sources</code> key</li> <li>Add necessary license information to the sources according to the licensing guide</li> </ul> <p> Result: Metadata scalar and metadata timeseries</p>"},{"location":"developer/how_to_contribute_data/#3#initialize#table#on#the#oep","title":"3. Initialize table on the OEP","text":"<p>In order to add data to an OEP table, the (empty) table must be initialized on the OEP in the first place. In order to create the table, the resource from metadata is used,  whereby the name of the resource (OEM-key 15.2) is used to define the  OEP schema and the table name (table_name, to avoid spaces) in a pattern of <code>\"schema.table_name\"</code> (i.e. \"name\":  \"model_draft.sedos_tech_wind_turbine\") </p> <p>The fields from resource schema are used to create the  columns of the table. Initializing OEP table is done via: </p> <ul> <li>Visit oedatamodel-API</li> <li>Insert your OEP Username and Token </li> <li>You can find your API-Token in your OEP profile -&gt; in the top-right corner of the OEP website -&gt; under your name -&gt; settings -&gt; API-Token </li> <li>Select metadata file to create OEP table</li> <li>Submit </li> </ul> <p> Result: empty scalar  and timeseries tables on the OEP</p>"},{"location":"developer/how_to_contribute_data/#4#publish#datapackages","title":"4. Publish datapackages","text":"<p>The following step-by-step guide will show how to store data on the OEP and make it publicly available. As this guide is meant for developers of AP4-8, the oedatamodel-parameter will be used in the following.</p> <p>Prerequisite for publishing on OEP</p> <pre><code>1. Data exists in **oedatamodel-parameter** format as CSV file\n2. Metadata exists with [mandatory set of metadata information](../data_requirements/metadata/#mandatory#set#of#metadata#information) filled\n3. OEP [user account](https://openenergy-platform.org/user/register)\n4. Databus [user account](https://energy.databus.dbpedia.org/) (Create account on \"Login\" button)\n5. Databus API Key (On Databus go to Profile -&gt; Settings -&gt; Scroll down to \"Create New API Key\" to generate key)\n6. Table has been created on OEP (3. Initialize table on the OEP)\n</code></pre>"},{"location":"developer/how_to_contribute_data/#41#upload#data#to#oep#with#oedatamodel-api","title":"4.1 Upload data to OEP with oedatamodel-API","text":"<p>The oedatamodel-API uploads CSV files to the OEP. While uploading, incoming data is checked against  metadata schema from related table. Thus, </p> <ul> <li>Prepare upload data in CSV file according to metadata in related table</li> <li>Then open the oedatamodel-API</li> <li>Insert your token, enter table name and schema (defaults to \"model_draft\") and select your CSV file</li> <li>Click <code>Datei absenden</code> to upload</li> </ul> <p>In case upload data contains errors (format, naming, etc.) an error report is returned.  Otherwise, data is appended to given table on the OEP.</p> <p> Result: scalar and  timeseries tables on the OEP</p>"},{"location":"developer/how_to_contribute_data/#42#release#data#on#the#databus","title":"4.2 Release data on the databus","text":"<p>The oedatamodel-API can also register your datapackages on the databus.  Registering data on the databus must be done everytime, a new version of the data is available on the OEP. In doing so, other users will be able to query the most recent data from the OEP or to query for a specific data  version. In order to register your new data you have to:</p> <ul> <li>Open the oedatamodel-API</li> <li>Enter your username (username is not email address) and API Token</li> <li>Enter table name and schema (defaults to \"model_draft\")</li> <li>Enter new version string (at least one row in your table must be present with given string in column \"version\")</li> <li>Submit</li> </ul> <p>Group name: <code>SEDOS_&lt;sector&gt;_sector</code> | e.g. SEDOS_mobility_sector | SEDOS_industry_sector </p> <p>Now, your data should be registered and available on the databus.  As the SEDOS pipeline regularly checks for updates on the databus,  your new data version should be considered in next pipeline build.</p> <p> Result: OEP tables registered on the databus</p>"},{"location":"developer/data_requirements/input_data/","title":"Data","text":""},{"location":"developer/data_requirements/input_data/#input#data","title":"Input data","text":""},{"location":"developer/data_requirements/input_data/#naming#conventions#for#data#tables#and#parameters","title":"Naming conventions for data tables and parameters","text":"<p>Note</p> <ul> <li>Parameter name and table name conventions are in place due to technical reasons of the underlying relational postgre-sql database on the OEP. </li> </ul> <p>The following conventions will be automatically checked when uploading a table on the OEP, and error messages will be raised in case of violation. Users need to correct them and their compliance is mandatory.</p>"},{"location":"developer/data_requirements/input_data/#dos","title":"Do's","text":"<ul> <li>use ASCII characters only</li> <li>use lower case only </li> <li>use the singular instead of the plural.</li> <li>use underscores</li> </ul>"},{"location":"developer/data_requirements/input_data/#donts","title":"Don'ts","text":"<ul> <li>table name must not exceed maximal character limit = 50</li> <li>no points</li> <li>no commas</li> <li>no spaces</li> <li>no special characters</li> <li>avoid dates</li> <li>no hyphens. If dates are used, then without <code>-</code>! E.g.: 2022-10-21 will through an error. Use underscore instead!</li> <li>don't start parameter name with a number</li> </ul>"},{"location":"developer/data_requirements/input_data/#delimiter","title":"Delimiter","text":"<p>Use semicolon <code>;</code> as the column delimiter. </p>"},{"location":"developer/data_requirements/input_data/#decimal#separator","title":"Decimal separator","text":"<p>Use point <code>.</code> as decimal separator.</p>"},{"location":"developer/data_requirements/input_data/#sedos#reference#dataset#srd#versioning","title":"SEDOS Reference Dataset (SRD) versioning","text":"<p>For the SRD, the following version tags apply:</p> <ul> <li>srd_range_sedos: Final SRD with ranges to include parametric uncertainty from different sources. </li> <li>srd_range_v1: Updated SRD, after project end. </li> <li>srd_point_sedos: SEDOS-specific values from srd_range_sedos that serve as a basis for all scnearios. </li> </ul>"},{"location":"developer/data_requirements/input_data/#datatypes","title":"Datatypes","text":"<p>Available datatypes and corresponding formatting examples:</p> dtype example comment json \"{\"\"key1\"\": \"\"text\"\", \"\"key2\"\": \"\"text\"\"}\" {\"key1\": \"text\", ...} might work as well. If you're using an table edititor make sure to use ASCII characters only float array [0.02, 279.5] arrays with strings should be formatted as strings (\"['string1', 'string2']\" text \"text\" String data should have text as datatype (text serves as \"string\") integer 27 text array \"[\"\"TH\"\", \"\"BW\"\"]\" [\"TH\",\"BW\"] might work as well. If you're using an table edititor make sure to use ASCII characters only"},{"location":"developer/data_requirements/input_data/#table#naming","title":"Table naming","text":"<p>Follow the nomenclature for table and process naming.</p> <p>Note</p> <ul> <li>Create a new data package for each process, e.g. wind_onshore, chp, ... </li> <li>Or use the <code>type</code> column to put multiple processes in one data package</li> <li>You can use a single datapackage for both demand data and other constraint data (tech-independent parameters),e.g.: <ul> <li>emission limit, </li> <li>natural domestic limit, </li> <li>WACC </li> </ul> </li> </ul>"},{"location":"developer/data_requirements/input_data/#parameter#naming","title":"Parameter naming","text":"<p>Follow the nomenclature for parameter naming.</p> <p>Note</p> <ul> <li>Parameter names must be linked to a concept in an ontology</li> </ul> <p>It is importance that every parameter name is linked to a suitable ontological concept via the metadata to enable  its clear interpretation.  In case you cannot find a suitable ontology concept (e.g. because it's not in the ontology yet), please make sure  your chosen parameter name is clear and common in the domain. In this case avoid acronyms. </p> <p>Ontological annotations</p> <ul> <li>In the nomenclature for parameter naming in sheet:  Parameter_Set, we made suggestions for suitable ontology concepts for usage across the SEDOS APs.  Please use them or make suggestions of better suitable concepts.</li> </ul> <p>For more background information regarding for linking parameter names and ontology concepts, using OEM, see here.</p> <p>For a practical manual linking parameter names to a suitable ontology concepts, using oemetadata builder, see here.</p>"},{"location":"developer/data_requirements/input_data/#parameter#naming#in#case#of#missing#suitable#ontology#concept","title":"Parameter naming in case of missing suitable ontology concept","text":"<p>It is likely that not every parameter concept is already covered by an ontology. In this case, linking your parameter name to a suitable ontology concept is not directly possible.</p> <p>It might, however, be indirectly possible by linking it to a distinct selection of related ontology concepts.  In this case you would link your parameter name to multiple related concepts.</p> <p>For a practical manual linking parameter names to multiple related ontology concepts, using oemetadata builder, see here.</p>"},{"location":"developer/data_requirements/input_data/#output#data","title":"Output Data","text":""},{"location":"developer/data_requirements/input_data/#output#paramters","title":"Output Paramters","text":"<p>The model result data are structured within the following parameters:</p> <ul> <li>flow_volume</li> <li>losses</li> <li>costs_investment</li> <li>costs_variable</li> <li>costs_fixed</li> <li>capacity_inst</li> <li>capacity_new</li> </ul>"},{"location":"developer/data_requirements/input_data/#result#table#format","title":"Result Table Format","text":"<p>The result table should be filled as follows - make sure to follow the format conventions:</p> scenario year process parameter sector category specification groups new input_groups output_groups unit value <code>&lt;framework&gt;_&lt;model-structure&gt;_&lt;scenario&gt;</code> <code>&lt;int&gt;</code> <code>&lt;string&gt;</code> <code>&lt;string&gt;</code> <code>&lt;string&gt;</code> <code>&lt;string&gt;</code> <code>&lt;python string array&gt;</code> <code>&lt;python string array&gt;</code> <code>&lt;int&gt;</code> <code>&lt;python string array&gt;</code> <code>&lt;python string array&gt;</code> <code>&lt;string&gt;</code> <code>&lt;float&gt;</code> o_steel_tokio 2030 ind_cement_finish_1 capacity_inst ind cement [\u2018finish\u2019] [\u2018future\u2019, \u2018industry\u2019] 1 MW 100 t_all_tokio 2045 x2x_x2liquid_oref_0 costs_investment x2x x2liquid [\u2018oref\u2019] 0 MEUR 10 f_transport_tokio 2030 tra_road_lcar_ice_pass_flex_0 flow_volume tra road [\u2018lcar\u2019, \u2018ice\u2019, \u2018pass\u2019] 0 [\u2018sec_gasoline\u2019] MWh 50 f_transport_tokio 2030 tra_road_lcar_ice_pass_flex_0 flow_volume tra road [\u2018lcar\u2019, \u2018ice\u2019, \u2018pass\u2019] 0 [\u2018sec_ethanol\u2019] MWh 30 t_all_siena 2030 ind_cement_finish_1 flow_volume ind cement [\u2018finish\u2019] 1 [\u2018emi_co2_f_ind\u2019] t 100 t_all_siena 2030 ind_cement_finish_1 flow_volume ind cement [\u2018finish\u2019] 1 [\u2018emi_ch4_f_ind\u2019] t 1 t_all_siena 2030 ind_cement_finish_1 flow_volume ind cement [\u2018finish\u2019] 1 [\u2018emi_co2_eq\u2019] t 128"},{"location":"developer/data_requirements/licensing/","title":"Data Licencing","text":"<p>In the SEDOS project, Open Data is one of the main criteria for developing the Reference Energy System (RES) database.  Open Data implies adequate licencing as a legal requirement, hence why this section aims to bring you up to speed regarding the nitty-gritty of licencing.  By the end of this section, you'll be able to licence your input data adequately.</p>"},{"location":"developer/data_requirements/licensing/#suitable#data#licences#in#sedos","title":"Suitable data licences in SEDOS","text":"How to document licences in OEMetadata? <p>If your data set has a licence, follow this example.     For example:      </p> <pre><code>{\n    \"sources\": [\n        {\n            \"title\": \"OEDatamodel-parameter\",\n            \"description\": \"Parameter data model for secondary input scalars and timeseries\",\n            \"path\": \"https://github.com/sedos-project/oedatamodel/tree/main/oedatamodel-parameter\",\n            \"licenses\": [\n                {\n                    \"name\": \"CC0-1.0\",\n                    \"title\": \"Creative Commons Zero v1.0 Universal\",\n                    \"path\": \"https://creativecommons.org/publicdomain/zero/1.0/legalcode\",\n                    \"instruction\": \"You are free: To Share, To Create, To Adapt\",\n                    \"attribution\": null\n                }\n            ]\n        },\n        {\n            \"title\": \"Code exposed: Review of five open-source frameworks for modeling renewable energy systems\",\n            \"description\": \"Energy system modeling is a commonly used method to provide policy recommendations and insight to transformation pathways of energy systems. However, the low open-source availability of the frameworks in practice often leads to low interpretability and transparency of energy modeling system configurations. The configuration of an energy model entails how its system components, such as power plants, storage systems and grids operate, and which parameters are used to define them. In order to understand the impact of different model configurations and working principles on the model output, a thorough comparison between various modeling frameworks is necessary. This work thereby consists of a comparison of five open-source energy system modeling frameworks (OS-ESMFs) oemof, GENeSYS-MOD, Balmorel, urbs and GENESYS-2 on the mathematical level and spotlights selected methodological differences in renewable energy system modeling. The comparison shows diversity in the complexity of selected system components and helps to define the best use-cases and scales of application for each framework. Impacts of modeled features on the results were demonstrated by implementing two harmonized scenarios depicting the German electricity system using each framework. While similar model results were obtained for both scenarios, some differences were present, especially in the long-term expansion planning model. Some of those differences could be traced back to the identified modeling differences.\",\n            \"path\": \"https://doi.org/10.1016/j.rser.2022.112272\",\n            \"licenses\": [\n                {\n                    \"name\": \"CC-BY-4.0\",\n                    \"title\": \"Creative Commons Attribution 4.0 International\",\n                    \"path\": \"https://creativecommons.org/licenses/by/4.0/\",\n                    \"instruction\": \"You are free: To Share, To Create, To Adapt\",\n                    \"attribution\": null\n                }\n            ]\n        }\n\n    ]\n}\n</code></pre> <ol> <li>For the data collection in WP3-8, you should choose data published under one of the listed licences below. </li> <li>Add the licence spdx-id and/or correct attribution for respective source in the metadata (oem-key 12.4.1-5).</li> <li>If your data is published under an open licence not listed below, please get in touch with datenzentrum@rl-institut.de. <p>Please note: non-conformant clauses such as  NC (non commercial) and ND (no derivates) are NOT Open Data licences and must not be used. </p> </li> </ol> <p>Public Domain: All rights granted.</p> <ul> <li>CC0-1.0 | recommended</li> <li>PDDL-1.0 | recommended</li> <li>dl-de/zero-2-0 | granted by German government</li> <li>CC-PDDC | not recommended </li> </ul> <p>Attribution/Permissive: Use rights and relicensing granted. Proprietisation is possible. Correct attribution is required (see licence link).</p> <ul> <li>CC-BY-4.0                            | recommended                             </li> <li>ODC-By-1.0                           | recommended                             </li> <li>CDLA-Permissive-1.0 </li> <li>DL-DE-BY-2.0 | granted only by the German   government</li> <li> <p>GeoZG  (no official spdx-id)        | granted by German government            |</p> </li> <li> <p>GeoNutzV                             | granted by German government            </p> </li> </ul> <p>Share-alike (Copyleft): Use rights granted, propitiation impossible. </p> <ul> <li>ODbL-1.0     | recommended   </li> <li>CC-BY-SA-4.0 | not recommended</li> </ul> <p>For further information on licences, see  * OEP Tutorial on Open-Data Licences  * ifrOSS GitHub   * Open Definition</p>"},{"location":"developer/data_requirements/licensing/#missing#licence#-#using#data#without#an#open#licence","title":"Missing licence? - Using data without an open licence","text":"How to indicate missing licences in OEMetadata? <p>If your data set has no licence, please indicate this in the attribution, using this pattern:  <code>\"attribution\": \"copyright. AuthorSurname1, AuthorSurname2, AuthorSurname3 OR Institut1,Institut2,Institut3. Year\"</code>    For example:      </p> <pre><code>{\n    \"sources\": [\n        {\n            \"title\": \"Impact of electric vehicles on a future renewable energy-based power system in Europe with a focus on Germany\",\n            \"description\": \"Paper on novel modelling approach comprising a detailed representation of electric vehicles based on real driving patterns and interactions between the power systems of Germany and other European regions.\",\n            \"path\": \"https://doi.org/10.1002/er.4056\",\n            \"licenses\": [\n                {\n                    \"name\": null,\n                    \"title\": null,\n                    \"path\": null,\n                    \"instruction\": null,\n                    \"attribution\": \"copyright. Miller, Heinz, Rutrecht. 2021\"\n                }\n            ]\n        },\n        {\n            \"title\": \"Mobilit\u00e4t in Deutschland: Tabellarische Grundauswertung\",\n            \"description\": \"Mobilit\u00e4t in Deutschland (MiD) ist eine bundesweite Befragung von Haushalten zu ihrem allt\u00e4glichen Verkehrsverhalten im Auftrag des Bundesministeriums f\u00fcr Digitales und Verkehr (BMDV).\",\n            \"path\": \"https://bmdv.bund.de/SharedDocs/DE/Anlage/G/mid-2017-tabellenband.pdf?__blob=publicationFile\",\n            \"licenses\": [\n                {\n                    \"name\": null,\n                    \"title\": null,\n                    \"path\": null,\n                    \"instruction\": null,\n                    \"attribution\": \"copyright. Reiner Lemoine Institut, RKI. 1991\"\n                }\n            ]\n        }\n   ]\n}\n</code></pre> <p>If you want to use a data set without a licence or an open data licence, try the following steps: </p> <ol> <li>Contact the authors of the data set and ask for either the licence or send a request for user-and relicensing     rights. Templates in DE and EN can be found here. Please add     datenzentrum@rl-institut.de to the CC of the Email and store positive response here.  </li> <li> <p>You can use the unlicensed data if you only extract a considerable small subset of a larger data set. </p> <ul> <li>In Germany, the Act on Copyright and Related Rights / Gesetz \u00fcber Urheberrecht und verwandte Schutzrechte        (Urheberrechtsgesetz) contains the paragraph 60c Scientific research (Copyright Act, \u00a7 60c Scientific Research) that provides provisions specifically for non-commercial scientific research. According to this law:<ul> <li>Up to 15 percent of a work may be reproduced, distributed, and made publicly accessible for the purpose of     non-commercial scientific research. This can be done for a specific group of individuals conducting their own scientific research, as well as for individual third parties for the purpose of assessing the quality of scientific research.</li> <li>Up to 75 percent of a work may be reproduced for one's own scientific research.</li> </ul> </li> </ul> </li> </ol>"},{"location":"developer/data_requirements/metadata/","title":"Metadata","text":"<p>In SEDOS the metadata standard OEMetadata v.1.5.1 is used.</p>"},{"location":"developer/data_requirements/metadata/#required#metadata#information","title":"Required metadata information","text":"<p>In SEDOS a minimal mandatory set of metadata information is required to:</p> <ol> <li>automatically process the input data in the data pipeline,</li> <li>to provide useful context for data interpretation, and</li> <li>to fulfil legal requirements.</li> </ol>"},{"location":"developer/data_requirements/metadata/#mandatory#set#of#metadata#information","title":"Mandatory set of metadata information","text":"<p>OEMetadata templates exist</p> <p>Many metadata fields are already prefilled, if you can build upon metadata templates (scalar template and timeseries template).</p> <p>Technical upload requirement</p> <p>OEM-key 15.2 is technically required for upload with oedatamodel-API</p> <p>Providing the following oem-keys when submitting your metadata is mandatory.</p>"},{"location":"developer/data_requirements/metadata/#general#keys","title":"General Keys","text":"# Key Description Example SEDOS convention 1 name A file name or database table name.   oep_metadata_table_example_v15 sector_process_name   e.g. tra_road_mcar_bev_pass_0  2 title A human readable full title including author. RLI - OEMetadata - Metadata example table sedos_sector_process_name   e.g. sedos_tra_road_mcar_bev_pass_0  4 description A description or abstract of the package. It should be usable as  summary information for the entire package that is described by the  metadata. Example table used to illustrate the metadata structure and meaning. 6 subject An array of objects with topics of the data in OEO terms. 6.1 name The class label of the OEO terms. energy 6.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000150 8 publicationDate A date of publishing of the data or metadata. Date format is ISO 8601 (YYYY-MM-DD). 2019-02-06"},{"location":"developer/data_requirements/metadata/#source#keys","title":"Source Keys","text":"<p>Information about the individual sources the data stems from.</p> # Key Description Example SEDOS convention 12 sources An array of objects with the used and underlying sources of the data and metadata. 12.1 title A human readable title of the source, a document title or organisation name. IPCC Fifth Assessment Report 12.2 description A free text description of the data set. Scientific climate change report by the UN 12.3 path A URL to the original source. https://www.ipcc.ch/site/assets/uploads/2018/02/ipcc_wg3_ar5_full.pdf 12.4 licenses An array of objects under which the source is provided. 12.4.1 name The SPDX identifier.                                                                        ODbL-1.0  In case of missing licence 12.4.2 title The official (human readable) title of the license. Open Data Commons Open Database License 1.0 12.4.3 path A link to the license text. https://opendatacommons.org/licenses/odbl/1-0/index.html 12.4.4 instruction A short description of rights and restrictions. The use of tl;drLegal is recommended. You are free to share and change, but you must attribute, and share derivations under the same license. See https://tldrlegal.com/license/odc-open-database-license-(odbl) for further information. 12.4.5 attribution The copyright owner of the source. If attribution licenses are used, that name must be acknowledged. \u00a9 Intergovernmental Panel on Climate Change 2014"},{"location":"developer/data_requirements/metadata/#provenience#keys","title":"Provenience Keys","text":"<p>Information about changes on the metadata.</p> # Key Description Example SEDOS convention 14 contributors An array of objects of the people or organizations who contributed  to the data or metadata. Each object refers to one contributor. Every  contributor must have a title and property. The path, email, role and  organization properties are optional. 14.1 title A name of the contributor. Ludwig H\u00fclk 14.2 email A email address of the contributor or GitHub handle. @Ludee 14.3 date The date of the contribution. If the contribution took more than a  day, use the date of the final contribiution. Date Format is ISO 8601. 2016-06-16 14.4 object The target of the contribution. Which part of the package was  supplied or changed. Can be the data, metadata or both (data and  metadata). data and metadata 14.5 comment A free text commentary on what has been done. Fixed a typo in the title."},{"location":"developer/data_requirements/metadata/#resource#keys","title":"Resource Keys","text":"<p>Needed to process the csv-table for the OEP.</p> # Key Description Example SEDOS convention 15 resources An array of objects of the data. It describes the data resource as an individual file or (database) table. 15.1 profile The profile of this descriptor according to the profiles  specification. This information is retained in order to comply with the  \"Tabular Data Package\" standard. Use \"tabular-data-resource\" for all  tables. tabular-data-resource  15.2   name  A name for the entire data package. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. In a database, this  will be the name of the table within the  schema containing it.  The name can correspond to the file name (minus the file-extension) of the data file describing the resource, if it complies with the naming convention above. Name also contains information about the shema on the OEP, use \".\" to seperate shema from table name.  Requiered for oedatamodel upload  model_draft.sector_process_name  e.g. model_draft.tra_road_mcar_bev_pass_0  15.3 path A URL that should be a permanent http(s) address or other path directly linking to the resource. https://openenergy-platform.org/dataedit/view/openstreetmap/osm_deu_line 15.4 format The file extension. 'csv', 'xls', 'json' etc. would be expected to  be the standard file extension for this type of resource. When you  upload your data to the OEDB, in the shown metadata string, the format  will be changed accordingly to 'PostgreSQL', since the data there are  stored in a database. PostgreSQL 15.5 encoding Specifies the character encoding of the resource's data file. The values should be one of the \"Preferred MIME Names\" for a character encoding registered with IANA. If no value for this key is specified then the default is UTF-8. UTF-8"},{"location":"developer/data_requirements/metadata/#resource#keys#-#schema","title":"Resource Keys - Schema","text":"<p>Information about each column in the csv.</p> # Key Description Example SEDOS convention 15.6 schema An object that describes the structure of the present data. It  contains all fields (columns of the table), the primary key and optional  foreign keys. 15.6.1 fields An array of objects describing a column and providing name, description, type and unit. 15.6.1.1 name The name of the field. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. year 15.6.1.2 description A text describing the field. Reference year for which the data were collected. 15.6.1.3 type The data type of the field. In case of a geom column in a database, also indicate the shape and CRS. float array 15.6.1.4 unit The unit, preferably SI-unit, that values in this field are mapped  to. If 'unit' doesn't apply to a field, use 'null'. If the unit is given  in a seperate field, reference this field. MW 15.6.1.5 isAbout An array of objects with describe the field in OEO terms.  In case of multiple concepts use C)Case2 15.6.1.5.1 name The class label of the OEO terms. wind energy converting unit 15.6.1.5.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000044 15.6.1.6 valueReference An array of objects for an extended description of the values in the column in OEO terms. 15.6.1.6.1 value The name of the value in the column. onshore 15.6.1.6.2 name The class label of the OEO terms. onshore wind farm 15.6.1.6.3 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000311"},{"location":"developer/data_requirements/metadata/#optional#set#of#metadata#information","title":"Optional set of metadata information","text":""},{"location":"developer/data_requirements/metadata/#spatial#and#temporal#keys","title":"Spatial and Temporal Keys","text":"# Key Description Example SEDOS convention 10 spatial An object that describes the spatial context of the data it contains. 10.1 location A location of the data. In case of data where the location can be described as a point. May be specified as coordinates, URI, or addresses with street, house number, and zip code. 52.433509, 13.535855 10.2 extent A covered area. May be the name of a region, or the geometry of a bounding box. Europe Germany 10.3 resolution Pixel size in case of a regular raster image. Reference to administrative level or other spatial division that is present as the smallest spatially distinguished unit size. 1 ha NUTS-0 11 temporal An object with the time period covered in the data. Temporal information should either contain a \"referenceDate\" or the keys describing a time series; in rare cases both.  For scalars: <pre><code>\"temporal\": {\n    \"referenceDate\": \"2021\",\n    \"timeseries\": [\n        {\n            \"start\": \"2021-01-01\",\n            \"end\": \"2070-12-31\",\n            \"resolution\": \"yearly\"\n        }\n    ]\n</code></pre>  For timeseries: <pre><code>\"temporal\": {\n\"referenceDate\": \"2021\",\n\"timeseries\": [\n    {\n        \"start\": \"2021-01-01\",\n        \"end\": \"2021-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2024-01-01\",\n        \"end\": \"2024-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2027-01-01\",\n        \"end\": \"2027-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2030-01-01\",\n        \"end\": \"2030-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2035-01-01\",\n        \"end\": \"2035-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2040-01-01\",\n        \"end\": \"2040-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2045-01-01\",\n        \"end\": \"2045-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2050-01-01\",\n        \"end\": \"2050-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2060-01-01\",\n        \"end\": \"2060-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2070-01-01\",\n        \"end\": \"2070-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    }\n]\n</code></pre> 11.1 referenceDate The base year, month, or day. Point in time for which the data is meant to be accurate. The census data or a satellite image will have a reference date. Date Format is ISO 8601. 2016-01-01 11.2 timeseries An array that describes the time series. 11.2.1 start The beginning point in time of a time series. 2019-02-06T10:12:04+00:00 11.2.2 end The end point in time of a time series. 2019-02-07T10:12:04+00:00 11.2.3 resolution The time span between individual points of information in a time series. 30 s 11.2.4 alignment An indicator of whether stamps in a time series are left, right, or middle. left 11.2.5 aggregationType Indicates whether the values are a sum, average, or current. sum"},{"location":"developer/data_requirements/metadata/#context#keys","title":"Context Keys","text":"# Context Keys # Key Description Example SEDOS convention 9 context An object that describes the general setting, environment, or project leading to the creation or maintenance of this dataset. In science, this can be the research project. For example: <pre><code>\"context\": {\n        \"homepage\": \"https://sedos-project.github.io/.github/\",\n        \"documentation\": \"https://sedos-project.github.io/.github/\",\n        \"sourceCode\": \"https://github.com/sedos-project\",\n        \"contact\": \"Hans-Christian.Gils@dlr.de\",\n        \"grantNo\": \"03EI1040D\",\n        \"fundingAgency\": \"Bundesministerium f\u00c3\u00bcr Wirtschaft und Klimaschutz (BMWK)\",\n        \"fundingAgencyLogo\": \"https://en.wikipedia.org/wiki/Federal_Ministry_for_Economic_Affairs_and_Climate_Action#/media/File:BMWi_Logo_2021.svg\",\n        \"publisherLogo\": \"https://www.dlr.de/static/media/Logo-de.697a8e1f.svg\"\n    },\n</code></pre> 9.1 homepage A URL of the project. https://openenergy-platform.org/ 9.2 documentation A URL of the project documentation. https://openenergy-platform.org/about/ 9.3 sourceCode A URL of the project's source code. https://github.com/OpenEnergyPlatform 9.4 contact A reference to the creator or maintainer of the data set. It can be an email address or a GitHub handle. contact@example.com 9.5 grantNo An identifying grant number. In case of a publicly funded project, this number is assigned by the funding agency. 01AB2345 9.6 fundingAgency A name of the entity providing the funding. This can be a government agency or a company. Bundesministerium f\u00fcr Wirtschaft und Klimaschutz 9.7 fundingAgencyLogo A URL to the logo or image of the funding agency. https://commons.wikimedia.org/wiki/File:BMWi_Logo_2021.svg#/media/File:BMWi_Logo_2021.svg 9.8 publisherLogo A URL to the logo of the publishing agency of data. https://reiner-lemoine-institut.de//wp-content/uploads/2015/09/rlilogo.png"},{"location":"developer/data_requirements/metadata/#review#keys","title":"Review Keys","text":"<p>When using the provided templates above, the review keys are prefilled already.</p> # Key Description Example 17 @context Necessary for registering Data on the Databus and to be SPARQL-able https://raw.githubusercontent.com/OpenEnergyPlatform/oemetadata/master/metadata/latest/context.json"},{"location":"developer/data_requirements/ontology/","title":"Ontological annotation of data","text":""},{"location":"developer/data_requirements/ontology/#basic#annotation#knowledge#with#oem","title":"Basic annotation knowledge with OEM","text":"<p>Ontological annotation of data means that data is linked to ontological concepts in the metadata. </p> <p>In SEDOS we use the oemetadata v.1.5.1 (OEM) as metadata standard. For more context about the OEM-keys in oemetadata v.1.5.1, see here.</p> <p>In energy systems modelling, data is fed into a model via parameters and their associated values. In the following, when we speak about ontological annotation, we, therefore, speak of parameter names, which are linked to an ontological concept for definition.</p> <p>The linkage of parameter name and ontological concept in OEM has three elements:</p> <ol> <li>user-defined parameter name</li> <li>human-readable ontological concept name</li> <li>Internationalized Resource Identifier (IRI) </li> </ol> <p>Below the general section of the oemetadata v1.5.1 is shown, relevant for the ontological annotation of the table content itself.</p> <ul> <li>The general content of the table is annotated in the <code>subject</code> key</li> </ul> <p><pre><code>{\n  \"name\": null,\n  \"title\": null,\n  \"id\": null,\n  \"description\": null,\n  \"language\": [\n    null\n  ],\n  \"subject\": [\n    {\n      \"name\": null,\n      \"path\": null\n    }\n  ],\n  \"keywords\": [\n    null\n  ],\n  \"publicationDate\": null\n}\n</code></pre> Below the resource section of the oemetadata v1.5.1 is shown, relevant for ontological annotation of parameter names.</p>"},{"location":"developer/data_requirements/ontology/#link#a#parameter#name#to#a#suitable#ontology#concept","title":"Link a parameter name to a suitable ontology concept","text":""},{"location":"developer/data_requirements/ontology/#background#know-how","title":"Background know-how","text":"<p>Parameters can occur in the column header or as column value when dealing with tabular data.  </p> <ul> <li>A) Parameters in the column headers are annotated in the <code>isAbout</code> key.</li> <li>B) Parameters occurring within a column are annotated in the <code>valueReference</code> key.</li> </ul> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": null,\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": null,\n                \"path\": null\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>A) Parameters in the column headers - using <code>isAbout</code>:</p> <ol> <li>user-defined parameter name is put in name (OEM-key 15.6.1.1), </li> <li>a suitable  human-readable ontological concept name is put in name (OEM-key 15.6.1.5.1),</li> <li>Internationalized Resource Identifier (IRI) is put in path (OEM-key 15.6.1.5.2)</li> </ol> <p>For example: A column with values for the rotor diameter of a wind turbine:</p> id wind_turbine ro_diam 1 type A 50 2 type A 60 3 type A 70 4 type B 80 5 type B 110 <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"wind_turbine\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"wind energy converting unit\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000044\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          },\n          {\n            \"name\": \"ro_diam\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": \"meter\",\n            \"isAbout\": [\n              {\n                \"name\": \"rotor diameter\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00020144\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>B) Parameters within a column - using <code>valueReference</code> and <code>isAbout</code>:</p> <p><code>valueReference</code></p> <ol> <li>user-defined parameter name is put in value (OEM-key 15.6.1.6.1), </li> <li>a suitable  human-readable ontological concept name is put in name (OEM-key 15.6.1.6.2),</li> <li>Internationalized Resource Identifier (IRI) is put in path (OEM-key 15.6.1.6.3)</li> </ol> <p><code>isAbout</code></p> <p>When annotating using <code>valueReference</code>, don't forget to annotate the column itself in <code>isAbout</code>, as described in A).</p> <p>For example: A column containing various types of fuels: </p> id various_types_of_energy_carriers 1 coal_HCV 2 green_diesel 3 coal_LCV <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"various_types_of_energy_carriers\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"portion of matter\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000331\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": \"coal_HCV\",\n                \"name\": \"anthracite\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000058\"\n              },\n              {\n                \"value\": \"green_diesel\",\n                \"name\": \"biodiesel\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000071\"\n              },\n              {\n                \"value\": \"coal_LCV\",\n                \"name\": \"lignite\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000251\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/data_requirements/ontology/#with#oemetadata#builder","title":"With oemetadata builder","text":""},{"location":"developer/data_requirements/ontology/#annotation#conventions#for#automatic#data#processing","title":"Annotation conventions for automatic data processing","text":"<p>In SEDOS, automatic data reasoning and processing are based mainly on ontological annotations in the metadata.  Thus, thorough annotation and following the conventions are important for frictionless data processing.</p> <ul> <li>A) technology and technology_type (oem-key 6.1-2)</li> <li>B) for MiMo technologies the input and output energy vectors (oem-key 15.6.1.5.1-2)</li> <li>C) parameter names (oem-key 15.6.1.6.1-3)</li> </ul>"},{"location":"developer/data_requirements/ontology/#a#technology#and#technology_type","title":"A) technology and technology_type","text":"<p>The technology and technology_type columns from the oedatamodel-concrete are filled with the information from the <code>subject</code> key.</p>"},{"location":"developer/data_requirements/ontology/#b#input#and#output#energy#vectors#for#mimo#technologies","title":"B) input and output energy vectors for MiMo technologies","text":"<p>Moved to Input and output energy vectors.</p>"},{"location":"developer/data_requirements/ontology/#c#parameter#names","title":"C) parameter names","text":""},{"location":"developer/data_requirements/ontology/#case1","title":"Case1","text":"<p>In cases where there is a single suitable ontology concept in the OEO we'll use the keys <code>isAbout</code>, <code>valueReference</code> as explained above.</p>"},{"location":"developer/data_requirements/ontology/#case2","title":"Case2","text":"<p>In cases where there are multiple ontology concepts in the OEO that are suitable by using them in composition we'll use them as list in the <code>name</code> key.</p> <p>For example: thermal efficiency of a heat power plant (as column in a tabular data set)</p> <p>The concept thermal efficiency is not (yet, as of 23.09.22) available in the OEO, but the concepts:</p> <ul> <li>'heat generation process' http://openenergy-platform.org/ontology/oeo/oeo-physical/OEO_00010248</li> <li>'energy conversion efficiency' http://openenergy-platform.org/ontology/oeo/OEO_00140049</li> </ul> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"thermal efficiency\",\n            \"description\": \"The column holds the values of the thermal efficiency of a heat power plant\",\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"heat generation process\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/oeo-physical/OEO_00010248\"\n              },\n              {\n                \"name\": \"energy conversion efficiency\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00140049\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"developer/data_requirements/ontology/#case3","title":"Case3","text":"<p>In cases where there is NO suitable ontology concept in the OEO we'll copy the term used in the data directly to the <code>name</code>key for further data processing in SEDOS.</p> <p>Note</p> <pre><code>This is SEDOS-specific and needed for data processing. Normally one would leave the annotation in `isAbout` empty.\n</code></pre> <p>For example: fantasy power plant parameter</p> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"fantasy power plant paramter\",\n            \"description\": \"The column holds values of a parameter, whose concept is not yet available in the OEO, of a fantasy power plant \",\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"fantasy power plant parameter\",\n                \"path\": null\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"visitor/data/data_conventions/","title":"Data conventions","text":""},{"location":"visitor/data/data_conventions/#datamodel","title":"Datamodel","text":"<p>The oedatamodel-parameter (docs) has to  be used to provide input data in SEDOS. This choice was made to allow ontological annotation of data. The data  model consists of two table types: \"scalar\" and \"timeseries\". Please choose the table type accordingly, depending on the data you want to upload:</p> <ul> <li>Use scalar tables to provide parameters with no relation to a timeindex. To properly fill the table, read the    scalar model column description. Use the    example scalar package metadata to write your own metadata    (see section How to contribute data - 2. Create metadata</li> <li>Use a timeseries table to provide parameters with relation to a timeindex. Use the timeseries model column description to make yourself familiar with the    fields and add metadata to your tables using the example timeseries package metadata as a reference.</li> </ul> <p>Datamodel features</p> <ul> <li>type - use to specify multiple processes in one csv table (see example) </li> <li>bandwidth_type - specify how the    data bandwidths are interpreted</li> </ul>"},{"location":"visitor/data/data_conventions/#background#information","title":"Background information","text":"<p>This section provides additional information on parameters and on the interpretation of their possible values.</p> Information on special parameters <code>conversion_factor_&lt;commodity&gt;</code><code>flow_share_min/max/fix</code><code>capacity_p_abs_new_max</code><code>wacc</code> <p>Having many Multiple-Input-Multiple-Output (MIMO) processes in the model structure, efficiencies are considered with the parameter <code>conversion_factor</code>. We use the same naming convention for all parameters that describe the ratios of inputs and outputs in relation to the primary commodity.  The primary commodity (conversion_factor = 1) is per default the first output of the process. </p> <p>For consistency please check that the calorific values (heating values) that your conversion factors are based on, are consistent with the values defined in \"calorific_values_SEDOS\" in the supplementary files at the sharepoint.</p> <p>The TIMES adapter needs to convert the conversion factors into their parameter conventions and an automatic identification and naming of the commodity groups. as required by the framework.</p> <p>This parameter can be defined to bound flow shares within the commodity groups of MIMO processes that by default have flexible ratios.  e.g. for a hydrogen-ready gas turbine (that can either burn methane or h2 in the MIMO-process) the hydrogen flow for every  timestep could be restricted to a ratio of 0.3 with <code>flow_share_max=0.3</code>.</p> <p>Growth rates of processes should be considered with <code>capacity_p_abs_new_max</code> or <code>capacity_e_abs_new_max</code> parameter.  It describes absolute upper bounds for the expansion of capacities per milestone year. Please consider the deviating  period lengths for different milestone years when you determine the upper bounds. This parameter should be given for a process only if it is based on reasonable assumptions or data. Please include its background in your AP specific documentation. The transport sector considers growth rates with the market shares.</p> <p>The weighted average cost of capital (wacc) gives the interest rate (%) of costs for capital after taxes.  As we follow a macro-economic approach in SEDOS it is globally defined for all technologies with a value of 2 percent. Please link it to the <code>global_scalars</code> table as explained in the note <code>Linking data with foreign keys</code>.</p> Existing and investment processes Existing processesInvestment processes <p>Processes that were existing before the base year 2021 can be identified on their name. They end with <code>_0</code>  Example: <code>pow_combustion_gt_hydrogen_0</code></p> <p>Processes that were not existing before the base year 2021 and that the model can invest in can be  identified on their name. They end with <code>_1</code>  Example: <code>pow_combustion_cc_chp_ccs_biomass_1</code></p> Parameter_Input-Output <p>The Parameter_Input-Output relations are important to link relevant flow-specific parameters to input or output commodities  of a MIMO process. Due to the high number of MIMO processes in our model structure we defined defaults for these relations:  Cost parameters are directly related to the throughput power capacity based on the given primary commodity  (first output of a process with conversion_factor = 1).  Moreover, the following parameters are per default directly derived from the parameter names in your uploaded data.  - <code>conversion_factor_&lt;commodity&gt;</code>  - <code>flow_share_max_&lt;commodity&gt;</code>  - <code>emission_factor_&lt;commodity&gt;_&lt;emission_commodity&gt;</code>  Please make sure that the names accurately fit to this schema. Otherwise, the data adapter will not recognize the  uploaded data and the relation of the parameters can not be defined. </p> <p>For exceptions to these defaults please use the \"Parameter_Input-Output\" sheet to clearly indicate that the parameter relations do not follow these defaults. e.g. the investment costs of an electrolyzer that are defined in relation to the input power capacity.</p> Monetary value <p>If not further specified the base year for the monatary value is 2021.</p> <p>If monatary conversion were performed, the following logic was applied:  currency_A(year_x) -&gt; currency_B(year_x) -&gt; currency_B(year_z)  e.g. USD2010 -&gt; EUR2010 -&gt; EUR2021 </p> <p>For the conversion please use the provided table \"monetary_conversion\" in the supplementary files at the sharepoint.  The conversion is based on data from the ECB for the exchange rates and from the StBA for the harmonised index of consumer prices.  The original years of the sources can be documented in the method column - e.g. {<code>Investment costs</code>:<code>Conversion from USD2019</code>}</p> Leap years <p>Leap years are considered in timeseries data by setting the timeindex_stop for 2024, 2040, 2060 to    the 30.12.  The timesseries has only 8760 instead of 8784 timesteps (-&gt; the 31.12 is missing).</p> <pre><code>| id   | region   | type   | timeindex_start       | timeindex_stop        | timeindex_resolution   | exo_pkm_road_mcar   | version   | method   | source   | comment   |\n|------|----------|--------|-----------------------|-----------------------|------------------------|---------------------|-----------|----------|----------|-----------|\n| 1    | DE       |        | 2021-01-01 00:00:00   | 2021-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 2    | DE       |        | 2024-01-01 00:00:00   | 2024-12-30 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 3    | DE       |        | 2027-01-01 00:00:00   | 2027-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 4    | DE       |        | 2030-01-01 00:00:00   | 2030-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 5    | DE       |        | 2035-01-01 00:00:00   | 2035-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 6    | DE       |        | 2040-01-01 00:00:00   | 2040-12-30 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 7    | DE       |        | 2045-01-01 00:00:00   | 2045-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 8    | DE       |        | 2050-01-01 00:00:00   | 2050-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 9    | DE       |        | 2060-01-01 00:00:00   | 2060-12-30 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n| 10   | DE       |        | 2070-01-01 00:00:00   | 2070-12-31 23:00:00   | 1h                     | [1,2,3,\u2026,8760]      | v1        |          |          |           |\n</code></pre> Structure of energy demands <p>Demands per sector are provided via three tables:    1. <code>&lt;sector&gt;_scalars</code>    2. <code>&lt;sector&gt;_timeseries</code>    3. <code>&lt;sector&gt;_demand</code> </p> <p>The structure is exemplified on the transport sector below.</p> <code>tra_scalars</code><code>tra_timeseries</code><code>tra_demand</code> <p>The table collects all sector process-unspecific scalars.   Also the annual demands. Demand columns are named as the commodity (unit must be declared via metadata)</p> <pre><code>| id | region | year | type | exo_pkm_road_mcar | exo_tkm_rail | exo_tkm_rail_short | exo_pkm_road_lcar | bandwidth_type | version | method | source | comment |\n|----|--------|------|------|-------------------|--------------|--------------------|-------------------|----------------|---------|--------|--------|---------|\n| 1  | DE     | 2021 |      | 34.4              | 100          | 1000               | 66                |                |         |        |        |         |\n| 2  | DE     | 2024 |      | 34.4              | 101          | 1001               | 67                |                |         |        |        |         |\n| 3  | DE     | 2027 |      | 34.4              | 102          | 1002               | 68                |                |         |        |        |         |\n| 4  | DE     | 2030 |      | 34.4              | 103          | 1003               | 69                |                |         |        |        |         |\n| 5  | DE     | 2035 |      | 34.4              | 104          | 1004               | 70                |                |         |        |        |         |\n| 6  | DE     | 2040 |      | 34.4              | 105          | 1005               | 71                |                |         |        |        |         |\n| 7  | DE     | 2045 |      | 34.4              | 106          | 1006               | 72                |                |         |        |        |         |\n| 8  | DE     | 2050 |      | 34.4              | 107          | 1007               | 73                |                |         |        |        |         |\n| 9  | DE     | 2060 |      | 34.4              | 108          | 1008               | 74                |                |         |        |        |         |\n| 10 | DE     | 2070 |      | 34.4              | 109          | 1009               | 75                |                |         |        |        |         |\n</code></pre> <p>The table collects all sector timeseries - also the demand timeseries.   Note that leap years are considered in time series data by setting the timeindex_stop for 2024, 2040, 2060 to the 30.12.</p> <pre><code>| id | region | type | timeindex_start     | timeindex_stop      | timeindex_resolution | exo_pkm_road_mcar | exo_tkm_rail   | exo_tkm_rail_short | exo_pkm_road_lcar | exo_pkm_road_xcar | version | method | source | comment |\n|----|--------|------|---------------------|---------------------|----------------------|-------------------|----------------|--------------------|-------------------|-------------------|---------|--------|--------|---------|\n| 1  | DE     |      | 2021-01-01 00:00:00 | 2021-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 2  | DE     |      | 2024-01-01 00:00:00 | 2024-12-30 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 3  | DE     |      | 2027-01-01 00:00:00 | 2027-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 4  | DE     |      | 2030-01-01 00:00:00 | 2030-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 5  | DE     |      | 2035-01-01 00:00:00 | 2035-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 6  | DE     |      | 2040-01-01 00:00:00 | 2040-12-30 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 7  | DE     |      | 2045-01-01 00:00:00 | 2045-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 8  | DE     |      | 2050-01-01 00:00:00 | 2050-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 9  | DE     |      | 2060-01-01 00:00:00 | 2060-12-30 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n| 10 | DE     |      | 2070-01-01 00:00:00 | 2070-12-31 23:00:00 | 1h                   | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760] | [1,2,3,\u2026,8760]     | [1,2,3,\u2026,8760]    | [1,2,3,\u2026,8760]    | v1      |        |        |         |\n</code></pre> <p>In column \"demand_annual\" the scalar demand is mapped via foreign-key &amp; also the units via the metadata from   the <code>tra_scalars</code> table.  The normalised timeseries are mapped in the \"demand_timeseries_fixed\" column via Foreign-key.</p> <pre><code>| id | region | year | type                           | demand_annual                 | demand_timeseries_fixed          | bandwidth_type | version | method | source | comment |\n|----|--------|------|--------------------------------|-------------------------------|-----------------------------------|----------------|---------|--------|--------|---------|\n| 1  | DE     | 2021 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 2  | DE     | 2024 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 3  | DE     | 2027 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 4  | DE     | 2030 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 5  | DE     | 2035 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 6  | DE     | 2040 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 7  | DE     | 2045 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 8  | DE     | 2050 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 9  | DE     | 2060 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 10 | DE     | 2070 | helper_sink_exo_tkm_rail       | tra_scalars.exo_tkm_rail       | tra_timeseries.exo_tkm_rail       |                |         |        |        |         |\n| 11 | DE     | 2021 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 12 | DE     | 2024 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 13 | DE     | 2027 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 14 | DE     | 2030 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 15 | DE     | 2035 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 16 | DE     | 2040 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 17 | DE     | 2045 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 18 | DE     | 2050 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 19 | DE     | 2060 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 20 | DE     | 2070 | helper_sink_exo_tkm_rail_short | tra_scalars.exo_tkm_rail_short | tra_timeseries.exo_tkm_rail_short |                |         |        |        |         |\n| 21 | DE     | 2021 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 22 | DE     | 2024 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 23 | DE     | 2027 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 24 | DE     | 2030 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 25 | DE     | 2035 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 26 | DE     | 2040 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 27 | DE     | 2045 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 28 | DE     | 2050 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 29 | DE     | 2060 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 30 | DE     | 2070 | helper_sink_exo_pkm_road_mcar  | tra_scalars.exo_pkm_road_mcar  | tra_timeseries.exo_pkm_road_mcar  |                |         |        |        |         |\n| 31 | DE     | 2021 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 32 | DE     | 2024 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 33 | DE     | 2027 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 34 | DE     | 2030 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 35 | DE     | 2035 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 36 | DE     | 2040 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 37 | DE     | 2045 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 38 | DE     | 2050 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 39 | DE     | 2060 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n| 40 | DE     | 2070 | helper_sink_exo_pkm_road_lcar  | tra_scalars.exo_pkm_road_lcar  | tra_timeseries.exo_pkm_road_lcar  |                |         |        |        |         |\n</code></pre> Empty cells and value 0 <p>Example table:  <pre><code>| id | region | year | type | capacity_p_inst                     | capacity_p_abs_new_max | conversion_factor_sec_elec | lifetime | cost_inv_capacity_p | cb_coefficient | cv_coefficient | bandwidth_type | version | method | source | comment |\n|----|--------|------|------|-------------------------------------|------------------------|----------------------------|----------|---------------------|----------------|----------------|----------------|---------|--------|--------|---------|\n| 1      | DE   | 2021 | pow_combustion_cc_chp_ccs_biomass_1 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 2      | DE   | 2024 | pow_combustion_cc_chp_ccs_biomass_1 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 3      | DE   | 2027 | pow_combustion_cc_chp_ccs_biomass_1 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 4      | DE   | 2030 | pow_combustion_cc_chp_ccs_biomass_1 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 5      | DE   | 2035 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 25                  | 1000           | 0.4            | 0.6            |         |        |        |         |   |\n| 6      | DE   | 2040 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 25                  | 1000           | 0.4            | 0.6            |         |        |        |         |   |\n| 7      | DE   | 2045 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 25                  | 800            | 0.4            | 0.6            |         |        |        |         |   |\n| 8      | DE   | 2050 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 30                  | 800            | 0.4            | 0.6            |         |        |        |         |   |\n| 9      | DE   | 2060 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 30                  | 800            | 0.4            | 0.6            |         |        |        |         |   |\n| 10     | DE   | 2070 | pow_combustion_cc_chp_ccs_biomass_1 |                        |                            | 0.8      | 30                  | 600            | 0.4            | 0.6            |         |        |        |         |   |\n| 11     | DE   | 2021 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 12     | DE   | 2024 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 13     | DE   | 2027 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 14     | DE   | 2030 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 15     | DE   | 2035 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 16     | DE   | 2040 | pow_geothermal_st_1                 |                        | 0                          |          |                     |                |                |                |         |        |        |         |   |\n| 17     | DE   | 2045 | pow_geothermal_st_1                 |                        |                            | 0.4      | 25                  | 800            |                |                |         |        |        |         |   |\n| 18     | DE   | 2050 | pow_geothermal_st_1                 |                        |                            | 0.4      | 30                  | 800            |                |                |         |        |        |         |   |\n| 19     | DE   | 2060 | pow_geothermal_st_1                 |                        |                            | 0.4      | 30                  | 800            |                |                |         |        |        |         |   |\n| 20     | DE   | 2070 | pow_geothermal_st_1                 |                        |                            | 0.4      | 30                  | 600            |                |                |         |        |        |         |   |\n| 21     | DE   | 2021 | pow_combustion_gt_hydrogen_0        | 3500                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 22     | DE   | 2024 | pow_combustion_gt_hydrogen_0        | 3500                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 23     | DE   | 2027 | pow_combustion_gt_hydrogen_0        | 3500                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 24     | DE   | 2030 | pow_combustion_gt_hydrogen_0        | 3300                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 25     | DE   | 2035 | pow_combustion_gt_hydrogen_0        | 3000                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 26     | DE   | 2040 | pow_combustion_gt_hydrogen_0        | 2700                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 27     | DE   | 2045 | pow_combustion_gt_hydrogen_0        | 1500                   |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 28     | DE   | 2050 | pow_combustion_gt_hydrogen_0        | 200                    |                            | 0.6      | 20                  | 500            |                |                |         |        |        |         |   |\n| 29     | DE   | 2060 | pow_combustion_gt_hydrogen_0        | 0                      |                            |          |                     |                |                |                |         |        |        |         |   |\n| 30     | DE   | 2070 | pow_combustion_gt_hydrogen_0        | 0                      |                            |          |                     |                |                |                |         |        |        |         |   |\n</code></pre></p> Empty cellsValue 0 <p>Parameter values that do not exist for a given year, process and parameter combination have no relevance for a process.  Example: <pre><code>| id | region | year | type                                | capacity_p_inst    |\n|----|--------|------|-------------------------------------|--------------------|\n| 1  | DE     | 2021 | pow_combustion_cc_chp_ccs_biomass_1 |                    | \n| 2  | DE     | 2024 | pow_combustion_cc_chp_ccs_biomass_1 |                    |\n</code></pre></p> <p> Exception: Unrestricted bound parameters </p> <p>Upper and lower bound paramters have empty cells if unrestricted.  This convention was made to avoid  high or low dummy values for upper or lower bounds. In the example above, new capacity investments (<code>capacity_p_abs_new_max</code>) for the processes are not restricted:  <pre><code>| id | region | year | type                                 | capacity_p_abs_new_max |\n|----|--------|------|--------------------------------------|------------------------|\n| 5  | DE     | 2035 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 6  | DE     | 2040 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 7  | DE     | 2045 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 8  | DE     | 2050 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 9  | DE     | 2060 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 10 | DE     | 2070 | pow_combustion_cc_chp_ccs_biomassl_1 |                        |\n| 17 | DE     | 2045 | pow_geothermal_st_1                  |                        |\n| 18 | DE     | 2050 | pow_geothermal_st_1                  |                        |\n| 19 | DE     | 2060 | pow_geothermal_st_1                  |                        |\n| 20 | DE     | 2070 | pow_geothermal_st_1                  |                        |\n</code></pre> Other bounds parameters <pre><code>| SEDOS parameter name     | Recommended unit   | Description                                                                                |\n|--------------------------|--------------------|--------------------------------------------------------------------------------------------|\n| capacity_p_abs_new_max   | MW                 | Absolute upper bound on level of investment in new power output capacity for a period.     |\n| capacity_e_abs_new_max   | MWh                | Absolute upper bound on level of investment in new storage energy capacity for a period.   |\n| capacity_w_abs_new_max   | Mt                 | Absolute upper bound on level of investment in new weight capacity for a period.           |\n| activity_bound_min       | Mt/year            | Lower bound on the activity level of a process.                                            |\n| activity_bound_fix       | Mt/year            | Fix bound on the activity level of a process.                                              |\n| activity_bound_max       | Mt/year            | Upper bound on the activity level of a process.                                            |\n| demand_timeseries_lower  | MWh, pkm, tkm      | Lower bound for demand timeseries.                                                         |\n| demand_timeseries_upper  | MWh, pkm, tkm      | Upper bound for demand timeseries.                                                         |\n</code></pre></p> <p>The value is actually zero for a given year, process and parameter. Example: Existing capacity for <code>pow_combustion_gt_hydrogen_0</code> in 2060 is zero.  <pre><code>| id | region | year | type                                 | capacity_p_inst    |   \n|----|--------|------|--------------------------------------|--------------------|\n| 29 | DE     | 2060 | pow_combustion_gt_hydrogen_0         | 0                  |   \n</code></pre></p> Over specification of processes <p>Example table:  <pre><code>| id | region | year     | type   | capacity_p_inst                        | capacity_p_abs_new_max | conversion_factor_sec_elec | lifetime                     | cost_inv_capacity_p | cb_coefficient        | cv_coefficient   | bandwidth_type   | version          | method    | source   | comment  |           |\n|----|--------|----------|--------|----------------------------------------|------------------------|----------------------------|------------------------------|---------------------|-----------------------|------------------|------------------|------------------|-----------|----------|----------|-----------|\n|    | 1      | DE       | 2021   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 2      | DE       | 2024   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 3      | DE       | 2027   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 4      | DE       | 2030   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 5      | DE       | 2035   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 1000                  | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 6      | DE       | 2040   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 1000                  | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 7      | DE       | 2045   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 8      | DE       | 2050   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 9      | DE       | 2060   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 10     | DE       | 2070   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 600                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 11     | DE       | 2021   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 12     | DE       | 2024   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 13     | DE       | 2027   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 14     | DE       | 2030   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 15     | DE       | 2035   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 16     | DE       | 2040   | pow_geothermal_st_1                    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 17     | DE       | 2045   | pow_geothermal_st_1                    |                        |                            | 0.4                          | 25                  | 800                   |                  |                  |                  |           |          |          |           |\n|    | 18     | DE       | 2050   | pow_geothermal_st_1                    |                        |                            | 0.4                          | 30                  | 800                   |                  |                  |                  |           |          |          |           |\n|    | 19     | DE       | 2060   | pow_geothermal_st_1                    |                        |                            | 0.4                          | 30                  | 800                   |                  |                  |                  |           |          |          |           |\n|    | 20     | DE       | 2070   | pow_geothermal_st_1                    |                        |                            | 0.4                          | 30                  | 600                   |                  |                  |                  |           |          |          |           |\n|    | 21     | DE       | 2021   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 22     | DE       | 2024   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 23     | DE       | 2027   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 24     | DE       | 2030   | pow_combustion_gt_hydrogen_0           | 3300                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 25     | DE       | 2035   | pow_combustion_gt_hydrogen_0           | 3000                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 26     | DE       | 2040   | pow_combustion_gt_hydrogen_0           | 2700                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 27     | DE       | 2045   | pow_combustion_gt_hydrogen_0           | 1500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 28     | DE       | 2050   | pow_combustion_gt_hydrogen_0           | 200                    |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 29     | DE       | 2060   | pow_combustion_gt_hydrogen_0           | 0                      |                            |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 30     | DE       | 2070   | pow_combustion_gt_hydrogen_0           | 0                      |                            |                              |                     |                       |                  |                  |                  |           |          |          |           |\n</code></pre></p> <p>To avoid ambiguities in the data, the processes are specified as precisely as possible.  This means, for  example, for investment processes all years are specified in the data, even if an investment process is only available from later years, e.g 2035, as opposed to missing rows for 2021, 2024, 2027 and 2030.   To avoid data misinterpretation, the techno-economic parameter values for 2021, 2024, 2027 and 2030 are empty,  since the process does not exist yet in such years.  <pre><code>| id | region | year     | type   | capacity_p_inst                        | capacity_p_abs_new_max | conversion_factor_sec_elec | lifetime                     | cost_inv_capacity_p | cb_coefficient        | cv_coefficient   | bandwidth_type   | version          | method    | source   | comment  |           |\n|----|--------|----------|--------|----------------------------------------|------------------------|----------------------------|------------------------------|---------------------|-----------------------|------------------|------------------|------------------|-----------|----------|----------|-----------|\n|    | 1      | DE       | 2021   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 2      | DE       | 2024   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 3      | DE       | 2027   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 4      | DE       | 2030   | pow_combustion_cc_chp_ccs_biomass_1    |                        | 0                          |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 5      | DE       | 2035   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 1000                  | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 6      | DE       | 2040   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 1000                  | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 7      | DE       | 2045   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 25                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 8      | DE       | 2050   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 9      | DE       | 2060   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 800                   | 0.4              | 0.6              |                  |           |          |          |           |\n|    | 10     | DE       | 2070   | pow_combustion_cc_chp_ccs_biomass_1    |                        |                            | 0.8                          | 30                  | 600                   | 0.4              | 0.6              |                  |           |          |          |           |\n</code></pre></p> <p>Conversely, existing capacities are explicitly declared as 0 as soon as they are no longer in the system, as  opposed to missing rows for 2060 and 2070.  To avoid data misinterpretation, the techno-economic parameter values for 2060 and 2070 are empty,  since the process does not exist anymore in such years.  <pre><code>| id | region | year     | type   | capacity_p_inst                        | capacity_p_abs_new_max | conversion_factor_sec_elec | lifetime                     | cost_inv_capacity_p | cb_coefficient        | cv_coefficient   | bandwidth_type   | version          | method    | source   | comment  |           |\n|----|--------|----------|--------|----------------------------------------|------------------------|----------------------------|------------------------------|---------------------|-----------------------|------------------|------------------|------------------|-----------|----------|----------|-----------|\n|    | 21     | DE       | 2021   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 22     | DE       | 2024   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 23     | DE       | 2027   | pow_combustion_gt_hydrogen_0           | 3500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 24     | DE       | 2030   | pow_combustion_gt_hydrogen_0           | 3300                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 25     | DE       | 2035   | pow_combustion_gt_hydrogen_0           | 3000                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 26     | DE       | 2040   | pow_combustion_gt_hydrogen_0           | 2700                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 27     | DE       | 2045   | pow_combustion_gt_hydrogen_0           | 1500                   |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 28     | DE       | 2050   | pow_combustion_gt_hydrogen_0           | 200                    |                            | 0.6                          | 20                  | 500                   |                  |                  |                  |           |          |          |           |\n|    | 29     | DE       | 2060   | pow_combustion_gt_hydrogen_0           | 0                      |                            |                              |                     |                       |                  |                  |                  |           |          |          |           |\n|    | 30     | DE       | 2070   | pow_combustion_gt_hydrogen_0           | 0                      |                            |                              |                     |                       |                  |                  |                  |           |          |          |           |\n</code></pre> </p>"},{"location":"visitor/data/data_conventions/#standard#units","title":"Standard units","text":"<p>Standard units should be harmonized as far as possible to improve transparency and comparability.  The data adapters also convert the units to ensure compatibility with the frameworks.  There may also be exceptions to the suggestions below.</p> Size Unit Power MW Energy GWh / PJ Costs Euro Weight (products) Million tonnes Weight (CO2-equivalent emissions) tonnes Transport Service Billion pkm, Billion tkm Percent (range: [0,100]) -"},{"location":"visitor/data/download/","title":"How to download data?","text":"<p>You can have a look at the reference datasets and all related files on the SEDOS Dashboard. On this page you can explore the different files of the dataset and have a look at underlying data. In order to download the dataset to your local computer you need the so-called \"collection\".  The collection on the databus can be visited by clicking on the external link \"View collection\":</p> <p></p> <p>We propose three different methods to download the dataset:</p> <ol> <li> <p>Via bash script (works on Linux, Windows support not tested):</p> <p>In the data section of the collection view on the databus you can find a button which copies bash instructions to clipboard.</p> <p></p> <p>On your local maschine you can create a new folder and store instructions into a script file within the folder. Afterwards, you can run the script which will download all files of the dataset (collection) into current folder.</p> </li> <li> <p>Via python:</p> <p>In order to download a dataset via python, you must first set up a python environment and install the required \"data_adapter\" package from the SEDOS repository: <pre><code># Setup virtual python environment\npython -m venv .venv\n# Activate environment\nsource .venv/bin/activate\n# Install data_adapter package\npip install git+https://github.com/sedos-project/data_adapter.git \n</code></pre> Afterwards, you can download a collection from databus by running <code>data_adapter</code> in the command line. You will need the URL of the collection which you can view at collection page on databus: </p> <p>This will download related files into current working directory.</p> </li> <li> <p>By downloading the files manually from OpenenergyPlatform:</p> <p>Visit https://openenergyplatform.org/dataedit/view/model_draft?tags=246 to see all database tables tagged with the keyword \"SEDOS\". From there, you can click on a table to see and query/filter related data and to take a look at related metadata. Additionally, you can download (filtered) data from there as CSV or datapackage.</p> </li> <li> <p>By downloading the files manually from Databus:</p> <p>On the databus you can find related file URLs  in section \"DOWNLOAD URLS\".  From there, you can select file paths individually and open the path in your browser. This will download the selected file.</p> </li> </ol>"},{"location":"visitor/data/metadata/","title":"Metadata","text":"<p>In SEDOS the metadata standard OEMetadata v.1.5.1 is used.</p> <p>In SEDOS a minimal mandatory set of metadata information is provided to:</p> <ol> <li>automatically process the input data in the data pipeline,</li> <li>to provide useful context for data interpretation, and</li> <li>to fulfil legal requirements.</li> </ol> <p>The following oem-keys have been provided in the metadata of our reference dataset.</p>"},{"location":"visitor/data/metadata/#mandatory#set#of#metadata#information","title":"Mandatory set of metadata information","text":""},{"location":"visitor/data/metadata/#general#keys","title":"General Keys","text":"# Key Description Example SEDOS convention 1 name A file name or database table name.   oep_metadata_table_example_v15 sector_process_name   e.g. tra_road_mcar_bev_pass_0  2 title A human readable full title including author. RLI - OEMetadata - Metadata example table sedos_sector_process_name   e.g. sedos_tra_road_mcar_bev_pass_0  4 description A description or abstract of the package. It should be usable as  summary information for the entire package that is described by the  metadata. Example table used to illustrate the metadata structure and meaning. 6 subject An array of objects with topics of the data in OEO terms. 6.1 name The class label of the OEO terms. energy 6.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000150 8 publicationDate A date of publishing of the data or metadata. Date format is ISO 8601 (YYYY-MM-DD). 2019-02-06"},{"location":"visitor/data/metadata/#source#keys","title":"Source Keys","text":"<p>Information about the individual sources the data stems from.</p> # Key Description Example SEDOS convention 12 sources An array of objects with the used and underlying sources of the data and metadata. 12.1 title A human readable title of the source, a document title or organisation name. IPCC Fifth Assessment Report 12.2 description A free text description of the data set. Scientific climate change report by the UN 12.3 path A URL to the original source. https://www.ipcc.ch/site/assets/uploads/2018/02/ipcc_wg3_ar5_full.pdf 12.4 licenses An array of objects under which the source is provided. 12.4.1 name The SPDX identifier.                                                                        ODbL-1.0 12.4.2 title The official (human readable) title of the license. Open Data Commons Open Database License 1.0 12.4.3 path A link to the license text. https://opendatacommons.org/licenses/odbl/1-0/index.html 12.4.4 instruction A short description of rights and restrictions. The use of tl;drLegal is recommended. You are free to share and change, but you must attribute, and share derivations under the same license. See https://tldrlegal.com/license/odc-open-database-license-(odbl) for further information. 12.4.5 attribution The copyright owner of the source. If attribution licenses are used, that name must be acknowledged. \u00a9 Intergovernmental Panel on Climate Change 2014"},{"location":"visitor/data/metadata/#provenience#keys","title":"Provenience Keys","text":"<p>Information about changes on the metadata.</p> # Key Description Example SEDOS convention 14 contributors An array of objects of the people or organizations who contributed  to the data or metadata. Each object refers to one contributor. Every  contributor must have a title and property. The path, email, role and  organization properties are optional. 14.1 title A name of the contributor. Ludwig H\u00fclk 14.2 email A email address of the contributor or GitHub handle. @Ludee 14.3 date The date of the contribution. If the contribution took more than a  day, use the date of the final contribiution. Date Format is ISO 8601. 2016-06-16 14.4 object The target of the contribution. Which part of the package was  supplied or changed. Can be the data, metadata or both (data and  metadata). data and metadata 14.5 comment A free text commentary on what has been done. Fixed a typo in the title."},{"location":"visitor/data/metadata/#resource#keys","title":"Resource Keys","text":"<p>Needed to process the csv-table for the OEP.</p> # Key Description Example SEDOS convention 15 resources An array of objects of the data. It describes the data resource as an individual file or (database) table. 15.1 profile The profile of this descriptor according to the profiles  specification. This information is retained in order to comply with the  \"Tabular Data Package\" standard. Use \"tabular-data-resource\" for all  tables. tabular-data-resource  15.2   name  A name for the entire data package. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. In a database, this  will be the name of the table within the  schema containing it.  The name can correspond to the file name (minus the file-extension) of the data file describing the resource, if it complies with the naming convention above. Name also contains information about the shema on the OEP, use \".\" to seperate shema from table name.  Requiered for oedatamodel upload  model_draft.sector_process_name  e.g. model_draft.tra_road_mcar_bev_pass_0  15.3 path A URL that should be a permanent http(s) address or other path directly linking to the resource. https://openenergy-platform.org/dataedit/view/openstreetmap/osm_deu_line 15.4 format The file extension. 'csv', 'xls', 'json' etc. would be expected to  be the standard file extension for this type of resource. When you  upload your data to the OEDB, in the shown metadata string, the format  will be changed accordingly to 'PostgreSQL', since the data there are  stored in a database. PostgreSQL 15.5 encoding Specifies the character encoding of the resource's data file. The values should be one of the \"Preferred MIME Names\" for a character encoding registered with IANA. If no value for this key is specified then the default is UTF-8. UTF-8"},{"location":"visitor/data/metadata/#resource#keys#-#schema","title":"Resource Keys - Schema","text":"<p>Information about each column in the csv.</p> # Key Description Example SEDOS convention 15.6 schema An object that describes the structure of the present data. It  contains all fields (columns of the table), the primary key and optional  foreign keys. 15.6.1 fields An array of objects describing a column and providing name, description, type and unit. 15.6.1.1 name The name of the field. The name must consist of only lowercase alphanumeric characters or underscore. It must not start with a number or underscore. year 15.6.1.2 description A text describing the field. Reference year for which the data were collected. 15.6.1.3 type The data type of the field. In case of a geom column in a database, also indicate the shape and CRS. float array 15.6.1.4 unit The unit, preferably SI-unit, that values in this field are mapped  to. If 'unit' doesn't apply to a field, use 'null'. If the unit is given  in a seperate field, reference this field. MW 15.6.1.5 isAbout An array of objects with describe the field in OEO terms.  In case of multiple concepts use C)Case2 15.6.1.5.1 name The class label of the OEO terms. wind energy converting unit 15.6.1.5.2 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000044 15.6.1.6 valueReference An array of objects for an extended description of the values in the column in OEO terms. 15.6.1.6.1 value The name of the value in the column. onshore 15.6.1.6.2 name The class label of the OEO terms. onshore wind farm 15.6.1.6.3 path The URI of the class. https://openenergy-platform.org/ontology/oeo/OEO_00000311"},{"location":"visitor/data/metadata/#optional#set#of#metadata#information","title":"Optional set of metadata information","text":""},{"location":"visitor/data/metadata/#spatial#and#temporal#keys","title":"Spatial and Temporal Keys","text":"# Key Description Example SEDOS convention 10 spatial An object that describes the spatial context of the data it contains. 10.1 location A location of the data. In case of data where the location can be described as a point. May be specified as coordinates, URI, or addresses with street, house number, and zip code. 52.433509, 13.535855 10.2 extent A covered area. May be the name of a region, or the geometry of a bounding box. Europe Germany 10.3 resolution Pixel size in case of a regular raster image. Reference to administrative level or other spatial division that is present as the smallest spatially distinguished unit size. 1 ha NUTS-0 11 temporal An object with the time period covered in the data. Temporal information should either contain a \"referenceDate\" or the keys describing a time series; in rare cases both.  For scalars: <pre><code>\"temporal\": {\n    \"referenceDate\": \"2021\",\n    \"timeseries\": [\n        {\n            \"start\": \"2021-01-01\",\n            \"end\": \"2070-12-31\",\n            \"resolution\": \"yearly\"\n        }\n    ]\n</code></pre>  For timeseries: <pre><code>\"temporal\": {\n\"referenceDate\": \"2021\",\n\"timeseries\": [\n    {\n        \"start\": \"2021-01-01\",\n        \"end\": \"2021-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2024-01-01\",\n        \"end\": \"2024-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2027-01-01\",\n        \"end\": \"2027-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2030-01-01\",\n        \"end\": \"2030-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2035-01-01\",\n        \"end\": \"2035-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2040-01-01\",\n        \"end\": \"2040-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2045-01-01\",\n        \"end\": \"2045-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2050-01-01\",\n        \"end\": \"2050-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2060-01-01\",\n        \"end\": \"2060-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    },\n    {\n        \"start\": \"2070-01-01\",\n        \"end\": \"2070-12-31\",\n        \"resolution\": \"hourly\",\n        \"alignment\": \"left\"\n    }\n]\n</code></pre> 11.1 referenceDate The base year, month, or day. Point in time for which the data is meant to be accurate. The census data or a satellite image will have a reference date. Date Format is ISO 8601. 2016-01-01 11.2 timeseries An array that describes the time series. 11.2.1 start The beginning point in time of a time series. 2019-02-06T10:12:04+00:00 11.2.2 end The end point in time of a time series. 2019-02-07T10:12:04+00:00 11.2.3 resolution The time span between individual points of information in a time series. 30 s 11.2.4 alignment An indicator of whether stamps in a time series are left, right, or middle. left 11.2.5 aggregationType Indicates whether the values are a sum, average, or current. sum"},{"location":"visitor/data/metadata/#context#keys","title":"Context Keys","text":"# Context Keys # Key Description Example SEDOS convention 9 context An object that describes the general setting, environment, or project leading to the creation or maintenance of this dataset. In science, this can be the research project. For example: <pre><code>\"context\": {\n        \"homepage\": \"https://sedos-project.github.io/.github/\",\n        \"documentation\": \"https://sedos-project.github.io/.github/\",\n        \"sourceCode\": \"https://github.com/sedos-project\",\n        \"contact\": \"Hans-Christian.Gils@dlr.de\",\n        \"grantNo\": \"03EI1040D\",\n        \"fundingAgency\": \"Bundesministerium f\u00c3\u00bcr Wirtschaft und Klimaschutz (BMWK)\",\n        \"fundingAgencyLogo\": \"https://en.wikipedia.org/wiki/Federal_Ministry_for_Economic_Affairs_and_Climate_Action#/media/File:BMWi_Logo_2021.svg\",\n        \"publisherLogo\": \"https://www.dlr.de/static/media/Logo-de.697a8e1f.svg\"\n    },\n</code></pre> 9.1 homepage A URL of the project. https://openenergy-platform.org/ 9.2 documentation A URL of the project documentation. https://openenergy-platform.org/about/ 9.3 sourceCode A URL of the project's source code. https://github.com/OpenEnergyPlatform 9.4 contact A reference to the creator or maintainer of the data set. It can be an email address or a GitHub handle. contact@example.com 9.5 grantNo An identifying grant number. In case of a publicly funded project, this number is assigned by the funding agency. 01AB2345 9.6 fundingAgency A name of the entity providing the funding. This can be a government agency or a company. Bundesministerium f\u00fcr Wirtschaft und Klimaschutz 9.7 fundingAgencyLogo A URL to the logo or image of the funding agency. https://commons.wikimedia.org/wiki/File:BMWi_Logo_2021.svg#/media/File:BMWi_Logo_2021.svg 9.8 publisherLogo A URL to the logo of the publishing agency of data. https://reiner-lemoine-institut.de//wp-content/uploads/2015/09/rlilogo.png"},{"location":"visitor/data/metadata/#review#keys","title":"Review Keys","text":"<p>When using the provided templates above, the review keys are prefilled already.</p> # Key Description Example 17 @context Necessary for registering Data on the Databus and to be SPARQL-able https://raw.githubusercontent.com/OpenEnergyPlatform/oemetadata/master/metadata/latest/context.json"},{"location":"visitor/data/nomenclature/","title":"Nomenclature","text":""},{"location":"visitor/data/nomenclature/#process-nomenclature","title":"Nomenclature","text":""},{"location":"visitor/data/nomenclature/#process#nomenclature","title":"Process Nomenclature","text":"<p>As the process and therefore the specifications of the processes are very detailed, a consistent nomenclature has been defined within the SEDOS project. e.g. the process \"pow_combustion_cc_chp_methane_1\" consists of elements of all the  defined columns in the following table. This table helps to understand the meaning of the process names.</p> sector category specifications input-specifications existing/new detail (aggregated) pow combustion [gt, st, cc, ic], chp, ccs [coal, biomass, waste, methane, biomass, hydrogen] [0, 1] _ag geothermal [orc, st], chp hydro [ror, pond] nuclear [fis, fus] photovoltaic [field, hh, cts, ind], [gm, fl], [msi, psi, asi ,cpv], [roof, faca, balc] wind_turbine [on, off, near], [fl, fb], [ha, va] storage [batt, hydr], [util, hh, cts, ind] eem hea combustion [gt, st, cc, ic, orc] [0, 1] heat_exchanger [0, 1] heater [soco, hp, stov, boil], [et, cd], [mono, dual], [air, gro] [hydrogen, gas, oil, biomass, wood] [0, 1] refrigerator [comp, abs, ads] [0, 1] storage [0, 1] cooling [proc, space, combined] [0, 1] water_heating [0, 1] district_heating [heat_high,heat_low] [0, 1] x2x p2gas aec, pemec, soec, sabm, biom [1] g2p pemfc, sofc ls [1] x2gas sr,mpyr,coel,rwgs [syngas,syngas_psa] [0,1] x2liquid source,oref,ft [biodiesel,bioethanol,biokerosene] [0,1] storage hydrogen,methane [lohc,new,retrofit] [1] other dac,biogas_treatment, cng_compression, lng_liquefication [ht,lt] [1] import ammonia, biogas, coal, crudeoil, h2_renewable, lng, methanol, natgas, sng, syndiesel, syngasoline, synkerosene transport hydrogen, methane, diesel, gasoline, kerosene, naphtha, methanol, ethanol, hfo, lpg, lng, ammonia [pipeline_retrofit,pipeline_new],[pipeline] ind automobile [pc, hcv, lcv][icev, phev, bev, fcev], prtp, bdys, pnts, hvlt, mcmp, fasmbl cement [rk, rawmats, novel, finish, novelfinish], ccs [0, 1] glass [flat, cont, spec, fibe], [batchplant, oxyf, oxyh, fulle, rege, recu, forming] [0, 1] paper [hchem, lchem, lmech] [pulp, finish] [0, 1] steel [blafu, elefu, dirred, hyddri, oxyfu, pellet, sinter, sponge, casting] ccs [0, 1] aluminium [pri, sec, aluminabayer] [0, 1] copper [pri, sec] [0, 1] chemical [NH3, methanol, Cl2, olefins, btx], hb, [msyn, mhydr], [memb, diaph], [scrac, ecrac, mto, mta], [smr, aec, pemec, biog, mpyr] source tra road [lcar, mcar, hcar, bus, motorc, ltruck, htruck, vehispec], [ice, fcev, bev, oev, hyb], [pass, frei], [long, short] [diesel, gasoline, methanol, ethanol, lng, cng, lpg, hydrogen, flex] rail [ice, fcev, bev, oev, hyb], [pass, frei], [long, short] [coal, diesel, ethanol] air [ice, fcev, bev, hyb], [pass, frei], [natio, europ, inter], [kerosene, hydrogen] water [ice, fcev], frei, [up, down] [lng, methanol, ethanol, ammonia, diesel, hydrogen]"},{"location":"visitor/data/nomenclature/#commodity-nomenclature","title":"Nomenclature","text":""},{"location":"visitor/data/nomenclature/#commodity#nomenclature","title":"Commodity Nomenclature","text":"<p>The SEDOS commodities are categorized as follows:</p> <ul> <li> primary energy carriers (pri)  <p>solar_radiation, wind_energy, hydro_energy, hydro_nat_inflow_seasonal, hydro_nat_inflow_openloop, geoth_heat, envir_heat, biomass_stemwood, biomass_pellets_pp, biomass_wood_chips_pp, biomass_wood_chips_pr, biomass_straw_bales_pr, biomass_wood_chips_sr, biomass_pellets_sr, waste_other_bio_sr, waste_municipal_bio, waste_wood, waste_animal, sewage_gas, sewage_sludge, waste_non_bio, landfill_gas, cbm, natural_gas, lignite, coal, crude_oil, uran, deuterium</p> </li> <li> secondary energy carriers (sec) <p>elec, elec_ind, elec_wallbox, elec_battery, biogas, natural_gas_syn, lng, cng, lpg, methane, hydrogen, syngas, syngas_sr, heating_oil, heavy_fuel_oil, diesel, diesel_fos, diesel_syn, biodiesel, gasoline, gasoline_fos, gasoline_syn, ammonia, naphtha, naphtha_syn, naphtha_fos, kerosene, kerosene_fos, kerosene_syn, refinery_gas, biokerosene, ethanol, methanol, biomethanol, heat_low, heat_high, heat_district_low_hh, heat_district_high_hh, heat_district_low_cts, heat_district_high_cts, heat_district_high_ind, saving, waste_heat_high_chemi, waste_heat_high_aluminum, waste_heat_high_cement, waste_heat_high_copper, waste_heat_high_glass, waste_heat_high_paper, waste_heat_high_steel</p> </li> <li> industrial intermediate products (iip) <p>aluminum_alumina, aluminum_crude, aluminum_scrap, auto_btry_hcv_bev, auto_btry_hcv_fcev, auto_btry_hcv_icev, auto_btry_lcv_bev, auto_btry_lcv_fcev, auto_btry_lcv_icev, auto_btry_pc_bev, auto_btry_pc_fcev, auto_btry_pc_icev, auto_btry_pc_phev, auto_heat_proc, auto_hvlt, auto_mcmp, auto_painted_hcv_bev, auto_painted_hcv_fcev, auto_painted_hcv_icev, auto_painted_lcv_bev, auto_painted_lcv_fcev, auto_painted_lcv_icev, auto_painted_pc_bev, auto_painted_pc_fcev, auto_painted_pc_icev, auto_painted_pc_phev, auto_parts_hcv_bev, auto_parts_hcv_fcev, auto_parts_hcv_icev, auto_parts_lcv_bev, auto_parts_lcv_fcev, auto_parts_lcv_icev, auto_parts_pc_bev, auto_parts_pc_fcev, auto_parts_pc_icev, auto_parts_pc_phev, auto_space_heat, auto_hot_water, biogas_ind, black_liquor, steel_blafu_gas, steel_blafu_gas_in, cement_clinker, cement_rawmeal, chemi_biomass, chemi_biomethanol, chemi_electro_chem, chemi_heavy_fuel_oil, chemi_machine_drive, chemi_meoh_f_h2, chemi_meoh_h2, chemi_methane, chemi_methanol, chemi_naphtha, chemi_nh3_h2, chemi_mtg_mtk_h2, chemi_lpg, chemi_processes_others, chemi_process_heat, chemi_steam, coke, steel_coke_oven_gas, steel_coke_oven_gas_in, copper_crude, copper_scrap, elec, glass_cont_batch, glass_cont_melt, glass_flat_batch, glass_flat_form, glass_flat_melt, heat_proc, hot_water, paper_pulp, paper_recycle, steam, steel_blafu_slag, steel_crudesteel, steel_iron_pellets, steel_raw_iron, steel_scrap, steel_sinter, steel_sponge_iron, heat_high, heat_high_other, cooling, heat_kiln, ict, lighting, machine_drive, pump_fans_compression</p> </li> <li> exogenous demand (exo) <p>air_pkm, air_natio_pkm, air_europ_pkm, air_inter_pkm,   rail_pkm, rail_short_pkm, rail_long_pkm, rail_tkm,   rail_short_tkm, rail_long_tkm, rail_steam_pkm, water_tkm,   road_car_pkm, road_lcar_pkm, road_mcar_pkm, road_hcar_pkm,   road_motorc_pkm, road_truck_tkm, road_ltruck_tkm, road_mtruck_tkm,   road_htruck_tkm, road_bus_pkm, road_bus_short_pkm, road_bus_long_pkm,   road_agri_diesel, road_const_diesel, hh_space_heat, hh_hot_water,   hh_space_cooling, hh_re1_space_heat, hh_re1_hot_water, hh_re1_space_cooling,   hh_re2_space_heat, hh_re2_hot_water, hh_re2_space_cooling, hh_re3_space_heat,   hh_re3_hot_water, hh_re3_space_cooling, hh_rn1_space_heat, hh_rn1_hot_water,   hh_rn1_space_cooling, hh_ue1_space_heat, hh_ue1_hot_water, hh_ue1_space_cooling,   hh_ue2_space_heat, hh_ue2_hot_water, hh_ue2_space_cooling, hh_ue3_space_heat,   hh_ue3_hot_water, hh_ue3_space_cooling, hh_un1_space_heat, hh_un1_hot_water,   hh_un1_space_cooling, hh_me1_space_heat, hh_me1_hot_water, hh_me1_space_cooling,   hh_me2_space_heat, hh_me2_hot_water, hh_me2_space_cooling, hh_me3_space_heat,   hh_me3_hot_water, hh_me3_space_cooling, hh_mn1_space_heat, hh_mn1_hot_water,   hh_mn1_space_cooling, cts_space_heat, cts_hot_water, cts_space_cooling,   cts_proc_cooling, cts_t1e_space_heat, cts_t1e_hot_water, cts_t1e_space_cooling,   cts_t1n_space_heat, cts_t1n_hot_water, cts_t1n_space_cooling, cts_t2e_space_heat,   cts_t2e_hot_water, cts_t2e_space_cooling, cts_t2n_space_heat, cts_t2n_hot_water,   cts_t2n_space_cooling, aluminum, cement, copper, glass_cont,   glass_fibe, glass_flat, glass_spec, paper_hq, paper_lq, steel,   auto_pc_icev, auto_pc_phev, auto_pc_bev, auto_pc_fcev, auto_lcv_icev,   auto_lcv_bev, auto_lcv_fcev, auto_hcv_icev, auto_hcv_bev, auto_hcv_fcev,   chemi_olefins, chemi_btx, chemi_nh3, chemi_cl2, chemi_methanol,   chemi_others, other_ind, agri_livestock</p> </li> <li> emissions (emi) <p>co2_f_pow, co2_f_hea, co2_f_x2x, co2_f_tra, co2_f_ind, co2_p_ind, co2_p_x2x, ch4_f_pow, ch4_f_hea, ch4_f_x2x, ch4_p_x2x, ch4_f_tra, ch4_f_ind, ch4_p_ind, n2o_f_ind, n2o_f_pow, n2o_f_hea, n2o_f_tra, n2o_f_x2x, n2o_p_x2x, co2_neg_air_dacc, co2_neg_fuel_cc_pow, co2_neg_fuel_cc_ind, co2_neg_fuel_cc_x2x, co2_neg_proc_cc_ind, co2_neg_air_bio, co2_neg_imp, co2_reusable, co2_stored</p> </li> </ul> <p>The abbreviation of these categories are added as prefix to all commodities to identify them easily. The exogenous demand in the model is defined in such a way that the model has maximum degrees of freedom to choose  between the technologies to meet the demand. The final energy in the system is thus determined endogenously in the model. In the model structure additionally the \"_orig\" suffix can be found. This has been used to describe delivery  processes e.g. for pipelines in a one node model approach. For example \"sec_methane_orig\" is converted to \"sec_methane\"  in the \"x2x_delivery_methane_pipeline_0\" process which is modelled with a simplified efficiency and costs. These are not listed above.</p> <p>The structure of the emission commodities is elaborated in Emission Concept</p>"},{"location":"visitor/data/nomenclature/#parameter-nomenclature","title":"Nomenclature","text":""},{"location":"visitor/data/nomenclature/#parameter#nomenclature","title":"Parameter Nomenclature","text":"<p>Moreover, the nomenclature of the parameters that are being used in the SEDOS data is introduced together with the description of the applied parameters and their units.</p> category parameter name description oedatamodel_cols id A primary key is a field or set of fields that uniquely identifies each row in the table. It's recorded as a list of strings, since it is possible to define the primary key as made up of several columns. region It describes the geographical scope of the dataset. year It describes the time frame of the dataset. type Is used distinguish different process types in a dataset. bandwidth_type It describes the bandwidths type of the values in the parameter columns. version It describes the version of the values in the parameter columns. method It describes the procedure for obtaining the value, in case it does not originate from a single source. source Human readable title of the source, e.g. document title or organisation name. The source must relate to a source provided in the oemetadata (datapackage) file. comment Free text comment on what's been done. timeindex_start Both date and time, with time zone. timeindex_stop Both date and time, with time zone. timeindex_resolution The time span between individual points of information in a time series. general co2_limit CO2 net emission budget for a period. lifetime Technical lifetime of a process. commodity_price Cost/Revenue for purchasing/selling one unit (MWh) of a stock or buy commodity. potential_annual_max Maximum annual energy use of a commodity. demand_timeseries normalized demand timeseries which gets multiplied with demand_annual demand_annual Projected annual demand for a commodity. shared_potential_id Specifies a name for a potential group in which all components share the same potential (e.g. wind turibine) capacities capacity_p_inst_0 Existing throughput power output capacity per process in a certain year. capacity_p_min Minimum installable required throughput power output capacity per process. capacity_p_max Maximum installable required throughput power output capacity per process. capacity_e_inst_0 Existing storage energy capacity. capacity_e_min Minimum required storage energy capacity. capacity_e_max Maximum allowed storage energy capacity. capacity_w_inst_0 Existing weight capacity of a process. capacity_w_min Maximum weight capacity of a process. capacity_w_max Minimum weight capacity of a process. capacity_tra_inst_0 Number of vehicles. capacity_p_abs_new_max Absolute upper bound on level of investment in new power output capacity for a period. capacity_e_abs_new_max Absolute upper bound on level of investment in new storage energy capacity for a period. capacity_w_abs_new_max Absolute upper bound on level of investment in new weight capacity for a period. availability_constant Constant output ratio in relation to installed capacity. (= h/a) availability_timeseries_fixed Time series of fixed capacity factor in relation to installed capacity. availability_timeseries_max Time series of maximum capacity factor in relation to installed capacity. costs wacc Percentage of costs for capital after taxes. Used to calculate annuity factor for investment costs. cost_inv_p Investment costs for new throughput power output capacity. cost_inv_e Investment costs for new storage energy capacity. cost_inv_w Investment costs for new capacity per unit weight. cost_inv_tra Investment costs for new vehicle unit. cost_fix_p Operation independent costs for existing and new throughput power output capacity. cost_fix_e Operation independent costs for existing and new storage energy capacity. cost_fix_w Operation independent costs for capacity per unit weight. cost_fix_tra Operation independent costs for existing and new vehicle units. cost_var_e Variable costs per throughput energy unit output. (excluding fuel costs). cost_var_tra cost_var_w Variable costs per throughput weight unit output. (excluding fuel costs). process conversion_factor_commodity Commodity-specific conversion factor (multiplication of input and output factors yields the efficiency of the process). flow_share_min_commodity Minimum share of flow commodity c based upon the sum of individual flows defined by the commodity group cg belonging to process p. flow_share_max_commodity Maximum share of flow commodity c based upon the sum of individual flows defined by the commodity group cg belonging to process p. flow_share_fix_commodity Fixed share of flow commodity c based upon the sum of individual flows defined by the commodity group cg belonging to process p. conversion_factor_timeseries_commodity Time-variable commodity-specific conversion factor. ef_commodity_emission Commodity-specific emission factor. cb_coefficient The Cb-coefficient (backpressure coefficient) is defined as the maximum power generation capacity in backpressure mode divided by the maximum heat production capacity (including flue gas condensation if applicable). cv_coefficient The Cv-value for an extraction steam turbine is defined as the loss of electricity production, when the heat production is increased one unit at constant fuel input. efficiency_sto_in Energy efficiency of power input. efficiency_sto_out Energy efficiency of power output. sto_init The initial state of charge of a storage. sto_self_discharge Storage losses over time. sto_ep_ratio_binding Fixed ratio of the storage energy capacity to its power output capacity. sto_ep_ratio_optional Optional fixed ratio of the storage energy capacity to its power output capacity. sto_cycles_max Defines the maximum number of full storage cycle equivalents over the lifetime. tra-extra capacity_tra_connection_max Maximum connection capacity of an average electric vehicle, taken the connection availability into acocunt. capacity_tra_connection_timeseries Connection capacity of an average electric vehicle. mileage Yearly mileage of a vehicle. market_share_range Range of market share. occupancy_rate Occupancy rate of a vehicle. tonnage Tonnes transported per vehicle. share_tra_charge_mode Proportion of fleet that load with a soecific charge mode.. sto_min_timeseries Time series of min battery state of charge. sto_max_timeseries Time series of max battery state of charge. optional_limitations User constraint to describe market limitations"},{"location":"visitor/data/ontology/","title":"Ontological annotation of data","text":""},{"location":"visitor/data/ontology/#basic#annotation#knowledge#with#oem","title":"Basic annotation knowledge with OEM","text":"<p>Ontological annotation of data means that data is linked to ontological concepts in the metadata. </p> <p>In SEDOS we use the oemetadata v.1.5.1 (OEM) as metadata standard. For more context about the OEM-keys in oemetadata v.1.5.1, see here.</p> <p>In energy systems modelling, data is fed into a model via parameters and their associated values. In the following, when we speak about ontological annotation, we, therefore, speak of parameter names, which are linked to an ontological concept for definition.</p> <p>The linkage of parameter name and ontological concept in OEM has three elements:</p> <ol> <li>user-defined parameter name</li> <li>human-readable ontological concept name</li> <li>Internationalized Resource Identifier (IRI) </li> </ol> <p>Below the general section of the oemetadata v1.5.1 is shown, relevant for the ontological annotation of the table content itself.</p> <ul> <li>The general content of the table is annotated in the <code>subject</code> key</li> </ul> <p><pre><code>{\n  \"name\": null,\n  \"title\": null,\n  \"id\": null,\n  \"description\": null,\n  \"language\": [\n    null\n  ],\n  \"subject\": [\n    {\n      \"name\": null,\n      \"path\": null\n    }\n  ],\n  \"keywords\": [\n    null\n  ],\n  \"publicationDate\": null\n}\n</code></pre> Below the resource section of the oemetadata v1.5.1 is shown, relevant for ontological annotation of parameter names.</p>"},{"location":"visitor/data/ontology/#link#a#parameter#name#to#a#suitable#ontology#concept","title":"Link a parameter name to a suitable ontology concept","text":""},{"location":"visitor/data/ontology/#background#know-how","title":"Background know-how","text":"<p>Parameters can occur in the column header or as column value when dealing with tabular data.  </p> <ul> <li>A) Parameters in the column headers are annotated in the <code>isAbout</code> key.</li> <li>B) Parameters occurring within a column are annotated in the <code>valueReference</code> key.</li> </ul> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": null,\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": null,\n                \"path\": null\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>A) Parameters in the column headers - using <code>isAbout</code>:</p> <ol> <li>user-defined parameter name is put in name (OEM-key 15.6.1.1), </li> <li>a suitable  human-readable ontological concept name is put in name (OEM-key 15.6.1.5.1),</li> <li>Internationalized Resource Identifier (IRI) is put in path (OEM-key 15.6.1.5.2)</li> </ol> <p>For example: A column with values for the rotor diameter of a wind turbine:</p> id wind_turbine ro_diam 1 type A 50 2 type A 60 3 type A 70 4 type B 80 5 type B 110 <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"wind_turbine\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"wind energy converting unit\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000044\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          },\n          {\n            \"name\": \"ro_diam\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": \"meter\",\n            \"isAbout\": [\n              {\n                \"name\": \"rotor diameter\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00020144\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre> <p>B) Parameters within a column - using <code>valueReference</code> and <code>isAbout</code>:</p> <p><code>valueReference</code></p> <ol> <li>user-defined parameter name is put in value (OEM-key 15.6.1.6.1), </li> <li>a suitable  human-readable ontological concept name is put in name (OEM-key 15.6.1.6.2),</li> <li>Internationalized Resource Identifier (IRI) is put in path (OEM-key 15.6.1.6.3)</li> </ol> <p><code>isAbout</code></p> <p>When annotating using <code>valueReference</code>, don't forget to annotate the column itself in <code>isAbout</code>, as described in A).</p> <p>For example: A column containing various types of fuels: </p> id various_types_of_energy_carriers 1 coal_HCV 2 green_diesel 3 coal_LCV <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"various_types_of_energy_carriers\",\n            \"description\": null,\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"portion of matter\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000331\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": \"coal_HCV\",\n                \"name\": \"anthracite\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000058\"\n              },\n              {\n                \"value\": \"green_diesel\",\n                \"name\": \"biodiesel\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000071\"\n              },\n              {\n                \"value\": \"coal_LCV\",\n                \"name\": \"lignite\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00000251\"\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"visitor/data/ontology/#with#oemetadata#builder","title":"With oemetadata builder","text":""},{"location":"visitor/data/ontology/#annotation#conventions#for#automatic#data#processing","title":"Annotation conventions for automatic data processing","text":"<p>In SEDOS, automatic data reasoning and processing are based mainly on ontological annotations in the metadata.  Thus, thorough annotation and following the conventions are important for frictionless data processing.</p> <ul> <li>A) technology and technology_type (oem-key 6.1-2)</li> <li>B) for MiMo technologies the input and output energy vectors (oem-key 15.6.1.5.1-2)</li> <li>C) parameter names (oem-key 15.6.1.6.1-3)</li> </ul>"},{"location":"visitor/data/ontology/#a#technology#and#technology_type","title":"A) technology and technology_type","text":"<p>The technology and technology_type columns from the oedatamodel-concrete are filled with the information from the <code>subject</code> key.</p>"},{"location":"visitor/data/ontology/#b#parameter#names","title":"B) parameter names","text":""},{"location":"visitor/data/ontology/#case1","title":"Case1","text":"<p>In cases where there is a single suitable ontology concept in the OEO we'll use the keys <code>isAbout</code>, <code>valueReference</code> as explained above.</p>"},{"location":"visitor/data/ontology/#case2","title":"Case2","text":"<p>In cases where there are multiple ontology concepts in the OEO that are suitable by using them in composition we'll use them as list in the <code>name</code> key.</p> <p>For example: thermal efficiency of a heat power plant (as column in a tabular data set)</p> <p>The concept thermal efficiency is not (yet, as of 23.09.22) available in the OEO, but the concepts:</p> <ul> <li>'heat generation process' http://openenergy-platform.org/ontology/oeo/oeo-physical/OEO_00010248</li> <li>'energy conversion efficiency' http://openenergy-platform.org/ontology/oeo/OEO_00140049</li> </ul> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"thermal efficiency\",\n            \"description\": \"The column holds the values of the thermal efficiency of a heat power plant\",\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"heat generation process\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/oeo-physical/OEO_00010248\"\n              },\n              {\n                \"name\": \"energy conversion efficiency\",\n                \"path\": \"http://openenergy-platform.org/ontology/oeo/OEO_00140049\"\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"visitor/data/ontology/#case3","title":"Case3","text":"<p>In cases where there is NO suitable ontology concept in the OEO we'll copy the term used in the data directly to the <code>name</code>key for further data processing in SEDOS.</p> <p>Note</p> <pre><code>This is SEDOS-specific and needed for data processing. Normally one would leave the annotation in `isAbout` empty.\n</code></pre> <p>For example: fantasy power plant parameter</p> <pre><code>{\n  \"resources\": [\n    {\n      \"profile\": null,\n      \"name\": null,\n      \"path\": null,\n      \"format\": null,\n      \"encoding\": null,\n      \"schema\": {\n        \"fields\": [\n          {\n            \"name\": \"fantasy power plant paramter\",\n            \"description\": \"The column holds values of a parameter, whose concept is not yet available in the OEO, of a fantasy power plant \",\n            \"type\": null,\n            \"unit\": null,\n            \"isAbout\": [\n              {\n                \"name\": \"fantasy power plant parameter\",\n                \"path\": null\n              }\n            ],\n            \"valueReference\": [\n              {\n                \"value\": null,\n                \"name\": null,\n                \"path\": null\n              }\n            ]\n          }\n        ]\n      }\n    }\n  ]\n}\n</code></pre>"},{"location":"visitor/data/overview/","title":"Overview of the SEDOS data architecture","text":"<p>This section provides an introductory overview of SEDOS' data architecture and its elements, which you will find  explained more detailed in this documentation.</p> <p>In the SEDOS project, data has been collected, preprocessed and published by its partners in five work packages (WPs) 4  to 8 representing five energy sectors (electricity, heat, ptx, transport, industry). Each WP is managed by one  partner, who contributes its energy sector expertise. Data can be uploaded each process for itself or in so named artifacts,  which can contain multiple processes with a similar table structure. Multiple input data packages have been created and uploaded onthe OEP via the OEDatamodel-API.</p> <p>The project's data architecture follows the frictionless data  conventions. A generalized representation of a datapackage is shown in the figure below. A datapackage consists of:</p> <ul> <li>data - containing parameters and values for modelling, and</li> <li>metadata - describing the structure of the datamodel, and providing context to the data. </li> </ul> <p></p> <p>Everytime new data is uploaded to the OEP, partners also need to register the new data version on  the databus via the OEDatamodel-API. Thus, the latest data versions from all WPs are available on the databus -  ready for further processing in the SEDOS data pipeline.</p>"},{"location":"visitor/model/gui/","title":"GUI","text":"<p>Try out our interactive SEDOS GUI</p>"},{"location":"visitor/model/gui/#why#this#gui","title":"Why this GUI?","text":"<p>To improve the transparency and reproducibility of the open source structure this GUI provides a few basic functionalities to explore the derived modeling base:</p> <ul> <li> <p>Looking into the underlying model structure of our reference energy system with the network graph.</p> </li> <li> <p>Exploring the underlying input data of our model with an integrated table view.</p> </li> <li> <p>See the aggregation steps defined in our model structure and download the different levels of detail for modeling.</p> </li> <li> <p>Create charts based on model results as an outcome of different frameworks and scenarios using the same reference dataset.</p> </li> </ul> <p>The GUI functionalities are divided into two main parts, the exploration of the model structure and the exploration of the model results which are described in more detail below:</p> <p>Use the 'Abbreviation Help' in the top bar to look up the meaning of our abbreviations.</p>"},{"location":"visitor/model/gui/#explore#the#model#structure","title":"Explore the Model Structure","text":"<p>In this part of the GUI, the structure of the data can be displayed graphically to build a better understanding of the model structure and its related data. To take a closer look at the structure of the data, there are the following four different buttons on the start page that will take you to the respective GUI application:</p>"},{"location":"visitor/model/gui/#first#button#generate#networks","title":"First Button: Generate Networks","text":"<ul> <li>First choose your model structure of interest. We provide different levels of detail or predefined case study models with chosen sectors and its processes.</li> <li>Various filters are available on the left side of the GUI to adjust the clarity. The filters are:<ul> <li>Sectors: choose the sectors you want to display </li> <li>Depth: select the depth of the graph. \"Reduced\" and \"Simple\" depth use the process nomenclature to break down the graph into less processes.</li> <li>Mapping: choose the algorithm you want to use to generate the graphs: <ul> <li>kk: layout with  \"Kamada-Kawai\"-algorithm</li> <li>fr: layout with \"Fruchterman-Reingold\" algorithm test</li> <li>go: layout with \"graphopt\"-algorithm </li> </ul> </li> <li>Choose specific process: Focus on a process and its dependencies</li> <li>Choose specific commodity: Focus on a commodity and its dependencies</li> </ul> </li> </ul>"},{"location":"visitor/model/gui/#second#button#look#at#processes","title":"Second Button: Look at Processes","text":"<ul> <li>Click here to find the corresponding data</li> <li>A list of all processes appears on the left-hand side: click on the desired process to view its details</li> </ul>"},{"location":"visitor/model/gui/#third#button#look#at#artifacts","title":"Third Button: Look at Artifacts","text":"<ul> <li>Click here to find the corresponding data</li> <li>The artifacts are a collection of processes; groupings were uploaded here, in which the individual processes are integrated</li> <li>A list of all artifacts sorted by sector appears on the left-hand side: click on the desired artifact to view its details</li> </ul>"},{"location":"visitor/model/gui/#fourth#button#aggregation#graph","title":"Fourth Button: Aggregation Graph","text":"<ul> <li>Click here to display the defined aggregations graphically, which will help you to get an overview over which processes are mapped to which aggregation</li> <li>Below this is a line where you can filter by the desired level of detail and select the sector to be displayed</li> <li>Furthermore, the processes from all sectors for a chosen level of detail can be downloaded as a xlsx-file</li> <li>The resulting diagram can be zoomed in and out and the individual nodes can be moved manually by clicking on them</li> </ul>"},{"location":"visitor/model/gui/#explore#the#model#results","title":"Explore the Model Results","text":""},{"location":"visitor/model/gui/#fifth#button#explore#diagrams","title":"Fifth Button: Explore Diagrams","text":"<p>The GUI enables graphical visualization of the result data, which can be filtered to meet specific requirements. This allows you to display results from a broad sector overview down to a detailed view of individual processes. To begin, select a scenario at the right of the start page under \"Explore the Model Results.\" Access the chart creation interface by clicking on \"Explore Diagrams.\"</p>"},{"location":"visitor/model/gui/#result#data","title":"Result Data","text":"<p>The result data can be aggregated on the following levels according to the Nomenclature: Sectors \u2192 Categories \u2192 Specifications \u2192 Processes This hierarchy allows for flexible data breakdowns, enabling customized configurations tailored to different plotting needs.</p> <p>A distinction is also made between different parameters, depending on the type of data being considered:</p> <ul> <li>flow_volume</li> <li>losses</li> <li>costs_investment</li> <li>costs_variable</li> <li>costs_fixed</li> <li>capacity_inst</li> <li>capacity_new</li> </ul> <p>The first two parameters refer to process flows which are defined in the input/output groups while the other parameters describe the process itself.</p> <p>In addition, the data is available for several milestone year until 2070, which makes it possible to analyze the transitions over time.</p>"},{"location":"visitor/model/gui/#plotting#interface","title":"Plotting interface","text":"<p>Four different tabs are available to define a plot:</p> <ul> <li>Scenario: Set the filters to get the result data of a specific scenario to be displayed.</li> <li>Other: Adjust the y-axis scaling by changing units, reorder items (e.g., bar chart elements), add labels, and normalize data if necessary.</li> <li>Graph: Choose the plot type and display options, add subplots if needed, define the x- and y-axes, and adjust colors based on the available choices in the scenario pane.</li> <li>Display: Illustration settings of the plot; change x- and y-title and add a legend if required.</li> </ul> <p>The basic buttons to create and see your data are:</p> <ul> <li> <p>Render chart and table: Display the chart based on the applied filters.</p> <ul> <li>Chart: Visual representation of the data.</li> <li>Table: Tabular display of the data used in the chart.</li> </ul> </li> <li> <p>Download Data: Download the table with the selected data as csv-file</p> </li> </ul> <p>Additional features to ease the use of this GUI are:</p> <ul> <li>Save Filer Settings: To save your filter settings for later use, enter a title and save the configuration once filters are set. For the titles we suggest the following nomenclature convention: scenario-name_chart-type_x-axis-description_y-axis-description</li> <li>Load Filter Settings: Load saved filter settings to create ready-made diagrams.</li> <li>Embed Chart: The \"Embed Chart\" feature generates a unique link for a customized chart by storing the parameter settings in a central database, allowing users to easily revisit or share it.  Opening the link recreates the chart with the exact same settings. This makes sharing data insights simple and accessible. </li> </ul>"},{"location":"visitor/model/gui/#how#to#create#a#plot","title":"How to create a plot","text":"<p>Choose from three basic plot types for visualization:</p> <ul> <li>Sankey Diagram:<ul> <li>Flow diagram representing input and output flows across selected node levels as described above.</li> <li>Effective for visualizing complex flows and energy balances.</li> </ul> </li> <li>Bar Chart: <ul> <li>Simple and easy to interpret.</li> <li>Suitable for discrete data developments.</li> <li>Stacked plots allow to keep track of the total values while showing the contribution single processes.</li> </ul> </li> <li>Line Chart:<ul> <li>Simple and easy to interpret.</li> <li>Suitable for displaying temporal developments.</li> </ul> </li> </ul> <p>Other Tips</p> <ul> <li>Especially for plots that take different processes, inputs/outputs etc. in consideration, coloring can be very helpful.      You can set the characteristic by which the colors are to be differentiated, depending on what you want to display.</li> <li>Make sure that the units of the selected data match.</li> <li>You can adjust the x- and y-axis for bar and line plots to the right value you want to plot.</li> <li>If you only want to represent input or output data in a sankey and not both, make sure to select 'Filter all', otherwise they will be considered in the diagram.</li> <li>Make use of subplots to compare different scenarios, years or sectors.</li> </ul>"},{"location":"visitor/model/results/","title":"Preliminary Results","text":"<p>  Some results based on test data are presented below. This data does not yet constitute a final result, it is merely intended to show what is possible with the help of the GUI, which representations can be used and which interpretations can be drawn.</p>"},{"location":"visitor/model/results/#data#based#on#the#times#model","title":"Data based on the TIMES model","text":"<p>The following diagrams are created out of the test data based on the TIMES model.</p>"},{"location":"visitor/model/results/#changes#in#technology","title":"Changes in technologyCopper Industry TransitionAluminium Industry Transition","text":"<p>One interesting question is how the technologies used in the industry will change over the decades.  The two sub-sectors of copper and aluminum were selected for a closer look at this development.  The following diagrams show the installed capacity per year in each case, with the coloring describing the technology used.</p> <p>The diagrams demonstrate the increasing prevalence of advanced technologies in the installed capacity of both the copper and aluminum industries over time.</p> <p>In the copper industry, the first diagram illustrates a clear transition: by 2050, the entire installed capacity is  composed of the most recent and innovative technologies, signifying a complete shift away from older methods.  The gradual introduction of these advanced systems, especially visible after 2035, shows a clear industry-wide  adaptation to newer production technologies.</p> <p>The second diagram, which focuses on the aluminum industry, similarly shows that from 2045 onwards, only new  technologies constitute the total installed capacity. Interestingly, the adoption of newer technologies in the secondary  aluminum production sector begins as early as 2025. This early transition in secondary production paves the way for  these technologies to dominate by mid-century, effectively replacing outdated systems. In the primary aluminum  production sector, a breakthrough occurs in 2035 with the introduction of a highly innovative technology, which rapidly  supplants the older methods within a decade. </p>"},{"location":"visitor/model/results/#energy#supply#of#the#energy-intensive#industry#sectors","title":"Energy supply of the energy-intensive industry sectorsIndustry Energy Supply 2021Industry Energy Supply 2050","text":"<p>The diagrams illustrate the models transformation of energy supply within various industrial subsectors between  2021 and 2050, with a particular focus on the integration of hydrogen.</p> <p>In 2021, the industrial sector heavily relied on traditional energy sources such as coal and methane,  as depicted in the left diagram. Coal plays a significant role in powering steel production, while methane and other  fossil fuels are prominent across various subsectors.</p> <p>In comparison, the 2050 diagram presents a drastically different energy landscape. Hydrogen emerges as a pivotal energy  source, especially in the steel sector, where it completely replaces coal. The reduction of methane usage is also  evident as the transition toward cleaner energy sources reshapes the entire industry. This shift underscores the  declining relevance of coal in industrial processes and highlights hydrogen\u2019s growing importance in decarbonizing  energy-intensive industries.</p> <p>More complex sankey variations:</p> <ul> <li>primary/secondary inputs to specifications (no outputs):</li> </ul>"},{"location":"visitor/model/results/#representations#of#the#energy#flow","title":"Representations of the energy flowYear 2021Year 2050","text":"<p>In the following, the energy flow of the primary/secondary inputs between the different categories is to be illustrated with the help of Sankey diagrams.  As before, the years 2021, 2030 and 2050 are considered in order to be able to recognize a development over the years.</p> <p>Year 2021:</p> <p>Year 2030:</p> <p>Year 2050:</p> <p>Here, too, it can be observed that the demand of hydrogen will increase significantly over the years and plays an especially important role in the steel sector. This development in the steel sector is illustrated in detail in the following two diagrams, where the demand of the primary/secondary inputs of the respective processes is shown.</p>"},{"location":"visitor/model/results/#flow#of#imports","title":"Flow of ImportsImports 2021Imports 2050","text":"<p>The following diagrams show the import flows for 2021 and 2050 to see which imports are used where and how the import changes over the years.  </p> <p>The sharp increase in hydrogen consumption is also particularly striking here, which will be the most imported energy source in 2050 and, as previously stated, will play a major role in the steel sector in particular or will be used in combustion.</p>"},{"location":"visitor/model/results/#data#based#on#the#oemof#model","title":"Data based on the Oemof model","text":"<p>The following diagrams are created out of the test data based on the Oemof model with focus on the steel category.</p> <p>The diagram below describes the consumption of sec-inputs per year:</p> <p>Here, too, the trend away from fossil fuels and particularly the increase in the use of hydrogen (es-pecially in the years 2045 and 2050) is clear, while biogas will no longer be consumed as early as 2035.</p> <p>The next diagram describes the additional installed capacity per year in the steel category:</p> <p>This shows that there will be a strong expansion of newer technologies, particularly in the years 2035 and 2045.</p>"},{"location":"visitor/model/scenarios/","title":"Overview of the SEDOS applications","text":"<p>The SEDOS model structure is a comprehensive, open-source framework designed for the analysis and optimization of future energy systems with the focus on sector coupling. It is built to capture the complex interactions among power, heat, conversion (power-to-X), industry, and transport sectors, offering modelers a flexible and transparent tool to explore diverse decarbonization pathways.</p>"},{"location":"visitor/model/scenarios/#possible#model#applications","title":"Possible Model Applications","text":"<ul> <li> <p>Integrated Energy System Optimization:   Analyze and optimize the entire energy system by capturing detailed interactions between sectors, enabling a holistic view of energy supply, conversion, and demand.</p> </li> <li> <p>Scenario and Sensitivity Analysis:   Develop and compare different future scenarios (e.g., high renewables penetration, accelerated decarbonization, gradual transition) to identify tipping points and assess the impact of various policy and technology choices.</p> </li> <li> <p>Investment Planning and Technology Assessment:   Support investment decisions by evaluating the competitiveness of alternative technologies and production routes, taking into account both existing and novel processes.</p> </li> <li> <p>Sector Coupling Analysis:   Examine the interdependencies between sectors, e.g., the influence of electrification in transport on power demand and identifying optimal strategies for a clean power supply.</p> </li> </ul>"},{"location":"visitor/model/scenarios/#supported#frameworks#for#modeling#scenarios","title":"Supported Frameworks for Modeling Scenarios","text":"<p>The SEDOS structure is designed to be as framework\u2013agnostic as possible and can be implemented with different energy system modeling frameworks, including TIMES, FINE and oemof. The data adapter repository provided on GitHub can be used as template for the integration of the SEDOS data into the new modeling framework. Depending on the type of framework you want to apply with the SEDOS data it might make sense to look into the specific adapters for our different frameworks: - TIMES Adapter - FINE Adapter - oemof Adapter</p>"},{"location":"visitor/model/scenarios/#enhanced#scenario#exploration","title":"Enhanced Scenario Exploration","text":"<p>The model\u2019s design supports the integration of diverse future scenarios, making it a robust tool for policy analysis and strategic planning in the context of energy transition. Within the SEDOS project we defined three possible scenarios to explore the future energy system:</p> <p>Base scenario ToKio - technology-open &amp; cost-optimal</p> <p>Which technologies can reduce GHG emissions from energy use to a targeted level at minimum cost (e.g. climate neutrality by 2045)?</p> <p>Scenario variation RIGa: Reduced import dependency for fossil gas</p> <p>How can the dependency on fossil gas imports, including LNG imports, be reduced to a specified minimum level at minimum  cost while complying with the GHG reduction targets?</p> <p>Scenario variation SienA/B: sector integration</p> <p>In which areas can sector integration make a greater contribution to GHG reduction?</p> <ul> <li>SienA: Specification of a minimum use of hydrogen or H2 derivatives.</li> <li>SienB: Specification of a minimum domestic RE electricity generation.</li> </ul> <p>In the following sections the SEDOS GUI is introduced, which allows for an interactive exploration of some preliminary model results.</p>"},{"location":"visitor/structure/aggregations/","title":"Technological Aggregations","text":""},{"location":"visitor/structure/aggregations/#background","title":"Background","text":"<p>The SEDOS model is designed to address the complexity of future energy systems by capturing detailed technological and sectoral interactions. A key challenge in modeling these systems is managing the vast number of processes and technologies while maintaining computational feasibility. This is where technological aggregation plays a central role. The primary motivation behind technological aggregation in SEDOS is to balance the need for detailed representation of future energy technologies with the limitations of computational resources. As the model aims to describe a highly heterogeneous landscape\u2014with thousands of processes spanning power generation, conversion (X2X), heat, industry, and transport\u2014aggregating technologies becomes essential. This reduction of detail ensures that the model remains tractable while still capturing critical interdependencies and competitive interactions across sectors.</p> <p>In the context of SEDOS, technological aggregation refers to the process of grouping together similar or related technologies into fewer representative processes. Instead of modeling each individual process in full detail, aggregation enables the representation of multiple technologies with common characteristics under a single, aggregated process. This approach:</p> <ul> <li> <p>Reduces Complexity: Simplifies the model by decreasing the number of variables and constraints, making the optimization problem more computationally efficient.</p> </li> <li> <p>Maintains Relevance: Preserves essential technological characteristics and interactions while filtering out excessive detail that might not significantly impact the overall system behavior.</p> </li> <li> <p>Enhances Flexibility: Allows the model to be adapted to various scenarios and research questions, as aggregation levels can be tailored to the specific needs of the study.</p> </li> </ul>"},{"location":"visitor/structure/aggregations/#implementation","title":"Implementation","text":"<p>Technological aggregation in SEDOS is implemented through a series of structured steps that reduce the high-resolution technology data into manageable layers:</p> <ul> <li> <p>Hierarchical Aggregation: The model is built with multiple aggregation levels. At the most detailed level, individual processes are defined with a high degree of technological resolution. These processes are then grouped into higher aggregation steps, where similar technologies are merged based on criteria such as fuel type, conversion technology, or output characteristics.</p> </li> <li> <p>Sector-Specific Adjustments: Different sectors use distinct aggregation strategies. For example, while the industry sector might require fine-grained aggregation to capture varied production routes and by-product flows, the transport sector aggregates vehicle technologies into representative categories that reflect their fuel consumption and performance.</p> </li> <li> <p>Aggregation Flexibility: The aggregation steps are not uniform across all sectors. Instead, they are designed to be flexible so that users can adjust the level of detail based on the research focus. This modular approach not only aids in reducing computational load but also allows for sensitivity analyses to determine the impact of aggregation on model outcomes.</p> </li> </ul> <p>In summary, technological aggregation in SEDOS is a foundational strategy that enables the comprehensive and flexible modeling of complex, sector-coupled energy systems. It provides the means to simplify detailed technological information without losing critical intersectoral relationships, ensuring that the model can effectively inform strategies for a sustainable energy transition.</p>"},{"location":"visitor/structure/aggregations/#visualization","title":"Visualization","text":"<p>A tree-structured graph can visually represent sector aggregations, providing a clear overview of which processes are grouped into each aggregation. This functionality is also described in the GUI section of this documentation. An example of the aggregation graph can be seen in the figure below:</p> <p></p>"},{"location":"visitor/structure/emissions/","title":"Emissions concept","text":"<p>General information:</p> <ul> <li>Emission types considered: CO2, methane (CH4), and nitrous oxide (N2O), based on data from Germany's National Inventory Report.</li> <li>Global warming potentials (GWP) over a 100-year time horizon, relative to CO2, are adopted from the IPCC Fifth Assessment Report (AR5): CH4: 28, N2O: 265.</li> <li>Energy sources are categorized as fossil, synthetic, or biogenic, with the assumption that only carbon-capture-based synthetic imports are considered.</li> <li>No positive balancing is applied to electricity imports, constrained by country-specific limitations.</li> <li>Negative offsets are applied to imported biogenic and synthetically produced energy sources that carry CO2.</li> <li>Negative offsets also account for the growth of biogenic resources within Germany and for processes involving carbon capture (CC) or direct air carbon capture (DACC).</li> <li>Sector-specific emission targets are not defined, due to sector coupling and the multiple potential conversions of energy sources before final consumption.</li> <li>Exogenous demand and carbon-carrying by-products are allowed, with limited CO2 sinks; the system boundary is set at the product demand level.</li> <li>Emissions are differentiated globally (CO2): a foreign key links to the global table of emission factors per energy source.</li> <li>Sector- and process-specific emission factors are used for CH4 and N2O, as they are more dependent on specific process conditions (e.g., firing temperature for N2O, material moisture for CH4).</li> <li>Negative emissions are implemented within the model structure</li> <li>The emission variables as indicated in the  depict the flow sums over all considered timesteps (not the remaining commodities at the last timestep).</li> </ul> <p>The following graphic visualizes the SEDOS emission concept:</p> <p></p> <p>Summarized, this means:</p> <ul> <li>Fossil: CO2 emissions from combustion</li> <li>Biogen: CO2 emissions from combustion &amp; negative emissions from production/source processes of biogenic energy sources.</li> <li>Synthetic: CO2 emissions from combustion &amp; model-endogenous negative emissions for import and production with carbon captured CO2.</li> </ul>"},{"location":"visitor/structure/exogenous_values/","title":"Collection of Exogenous Variables","text":"<p>In our approach exogenous assumptions are reduced by defining a technology-open model structure that does not only consider  processes that are generally expected to prevail on the market under current assumptions on future developments but  defines multiple parallel technologies that can also highly depend on the interactions between sectors. However, the optimization problem still needs various exogenous parameters that should be consistent across different sectors. Therefore, these exogenous values that can be related to each other are collected in the list below. To be consistent we try to use the \"Projection report\"  from the German Umweltbundesamt for as many assumptions as possible.</p>"},{"location":"visitor/structure/exogenous_values/#general#developments","title":"General developments","text":"<ul> <li>Macroeconomic development (gdp, gdp per capita)</li> <li>Demographic development (population, households, person per household)</li> <li>Development of living and usable space</li> <li>Development of passenger &amp; freight transport performance</li> <li>Development of primary energy prices</li> </ul>"},{"location":"visitor/structure/exogenous_values/#exogenous#demand","title":"Exogenous demand","text":"<ul> <li>Households &amp; tertiary sector: space heating, hot water, electricity</li> <li>Industry: production volumes, gross value added</li> <li>Transport: passenger-kilometers, tonne-kilometers</li> </ul>"},{"location":"visitor/structure/exogenous_values/#political#framework","title":"Political framework","text":"<ul> <li>Renewable energy target</li> <li>Emission targets (Without land use, land-use change, and forestry)</li> <li>GHG equivalence factors</li> </ul>"},{"location":"visitor/structure/exogenous_values/#technological#values","title":"Technological values","text":"<ul> <li>Installed capacities on first milestone year (brownfield)</li> <li>Decomissioning of installed capacities by lifetime</li> <li>Expansion limits per milestone year</li> <li>Efficiencies</li> <li>Energy-to-power ratios for storage systems</li> <li>Emission values</li> <li>Area potentials: Assumptions for allocation to technologies with conflicting objectives (e.g. biomass resources)</li> </ul>"},{"location":"visitor/structure/exogenous_values/#economic#values","title":"Economic values","text":"<ul> <li>Investment costs</li> <li>Fixed costs</li> <li>Variable costs</li> <li>Weighted average costs of capital (harmonized across all sectors)</li> </ul>"},{"location":"visitor/structure/exogenous_values/#key#resources","title":"Key Resources","text":"<ul> <li>Annual potential</li> <li>Hourly potential</li> <li>Resource costs</li> </ul>"},{"location":"visitor/structure/exogenous_values/#import#export","title":"Import / Export","text":"<ul> <li>Commodity prices of neighbouring countries</li> <li>Cost-potential ratios for imports of PtG and PtL products</li> <li>Simplified European electricity system model</li> </ul>"},{"location":"visitor/structure/heat/","title":"Heat sector","text":""},{"location":"visitor/structure/heat/#naming#convention","title":"Naming convention","text":"<p>The heat sector in the SEDOS dataset is divided into producers for district heating, such as heat plants, and in consumers. The consumers are split into household (hh) and commerce, trading and service (cts) buildings. The household buildings are seperated into rural (r), urban (u) and multihouseholds (m), the CTS buildings into service (t1) and production (t2) buildings. Each buildingtype in addition has an age type. For the household buildings it is divided into three different existing building ages (e1-3) and new buildings (n1). CTS buildings are split into existing (e) and new (n) buildings. The process names show wether it is a heating or cooling process and which technology it is (e.g. hp for heat pump). The processes are categorized in stock processes (0) and new build processes (1). The producers are split into the heat plants and the distribution grid. The heating plants are categorized into their energy carriers (coal, gas, biomass, etc.) and if they are stock or new processes. The grids are seperated into low temperature heat (LTH) and high temperature heat (HTH) grids. They are also specified wether they are connected to the HH or the CTS sector.</p> <p>Table 1: Nomenclature for the heat sector process naming.</p> Sector Mode building_type process_name Stock/Expansion hea hh me1 ... 0 me2 ... 1 me3 ... mn1 ... re1 ... re2 ... re3 ... rn1 ... ue1 ... ue2 ... ue3 ... un1 ... cts t1e ... t1n ... t2e ... t2n ... disrict_heating ..."},{"location":"visitor/structure/heat/#provided#parameters","title":"Provided parameters","text":"<p>The scalar parameters provided are described in Table 2. </p> <p>Table 2: Scalar parameters provided for the heat sector.</p> Parameter Unit Explanation potential_annual_max GW Maximum possible capacity possibe by the process capacity_p_inst_0 kW Existing power output capacity of a wallbox in a certain year. conversion_factor_commodity PJ Commodity-specific conversion factor (multiplication of input and output factors yields the efficiency of the process). ef_commodity_emission kt/PJ Commodity-specific emission factor. exo_commodity PJ Projected annual demand for a heating/cooling demand. lifetime a Technical lifetime of a process. cost_inv_p MEuro/GW Investment costs. cost_var_e Euro/GJ variable costs. cost_fix_p Euro/GW costs that occure every year. flow_share_fix_commodity - Fix flow share of the commodity in the process. availability_constant - availability of the process in a year. <p>All costs are presented excluding taxes and subsidies, based on 2021 price levels.</p>"},{"location":"visitor/structure/heat/#general#modeling#approach","title":"General modeling approach","text":"<p>The modeled heating processes can be categorized into three different types. The first are heating processes that have one input commodity and one output commodity. Then there are heating processes that either have one or two input commodities and one or two output commodities. The last type are cooling technologies. Furthermore there will be an in depth explenation for the district heating grid.</p>"},{"location":"visitor/structure/heat/#single#heating#technologies","title":"Single heating technologies","text":"<p>For the processes with one input and one output commodity, they can be modeled by having a fixed ratio of conversion factors. In this model the output commodity is normalized to 1 and the input is 1 divided by the efficiency of the process.</p>"},{"location":"visitor/structure/heat/#dual#heating#technologies","title":"Dual heating technologies","text":"<p>For the first subtype, two inputs one output commodity, the processes have conversion factors and fixed flow shares. Both conversion factors of the input commodities are set to 1. Also both input commodites have a fixed flow share set from 0 to 1 that adds up to 1. The output commodity has the efficiency set as the conversion factor. Processes with one input and two outputs the input conversion factor is set to 1. The output commodities conversion factors are set to their commodity specific efficiency. Both output commodites have a fixed flow share from 0 to 1 that adds up to 1. For processes with two input and two output commodites the input commodities conversion factors are set to one. Both commodities have a fixed flow share from 0 to 1 that add up to 1. The output commodites conversion factors are set to the commodity specific efficiency. Both commodities have a fixed flow share from 0 to 1 that add up to 1. </p>"},{"location":"visitor/structure/heat/#cooling#technologies","title":"Cooling technologies","text":"<p>Cooling processes have one input and one output commodity, they can be modelled by having a fixed ratio of conversion factors. In this model the input commodity is normalized to 1 and the output is given by the conversion factor of the process.</p>"},{"location":"visitor/structure/heat/#district#heating#grids","title":"District heating grids","text":"<p>The costs of district heating is depending on the amount of demand in a specific area. The more dense an area is, the lower is the delivery costs for district heating. This means that the model has to take into account a varying cost level depending on the building type and the area where the district heating grid would be build. In SEDOS every building type has its own district heating grid modeled with different steps. The first step is the already existing district heating network in Germany. Every next step has a fixed capacity that can be build. Each step is getting increasingly more expensive due to the less dense area it would be build in. Therefore there is a point where building new grids for specific building types isn't cost efficient anymore and the model will change to different heating methods.</p>"},{"location":"visitor/structure/industry/","title":"Industry","text":""},{"location":"visitor/structure/industry/#naming#convention","title":"Naming convention","text":"<p>The industry dataset in SEDOS is categorized into sub-sectors of industry, which are aluminum, automobile, cement, copper, chemical, glass, paper, steel, and the rest of the industry (ind_others_). Moreover, industry also includes so-called 'autoproducer' processes (ind_autoproducer_) as self-generation technologies and two simplified agricultural processes (ind_agri_standard_0, ind-agri_improved_1) to account for emissions from livestock harvesting. The complex heterogeneity of industry sectors is represented by individual sub-sector process chains. Each sub-sector contains a bunch of processes within the process chains to capture the best possible energy consumption characteristics of the respective sub-sector, and the processes are driven by the exogenous demand of production (exo_commodity).  Furthermore, source processes (ind_source_) are also introduced where necessary to supply commodities (e.g. raw materials, scraps) the beginning of the process chain.  The table below shows the nomenclature of process naming in industry.  Table 1: Nomenclature for the industry sector process naming.</p> Sector sub-sector Process type/specification Stock/Expansion ind aluminum [pri, sec, aluminabayer] 0 automobile [pc, hcv, lcv][icev, phev, bev, fcev], prtp, bdys, pnts, hvlt, mcmp,fasmbl 1 cement [rk, rawmats, novel, finish, novelfinish],ccs copper [pri, sec] chemical [nh3, methanol, cl2, olefins, btx], hb, [msyn, mhydr], [memb, diaph], [scrac, ecrac, mto, mta], [smr, aec, pemec, biog, mpyr] glass [flat, cont, spec, fibe], [batchplant, oxyf, oxyh, fulle, rege, recu, forming] paper [hchem, lchem, lmech] steel [blafu, elefu, dirred, hyddri, oxyfu, pellet, sinter, sponge, casting] others [heat_pump, mdrive, heat_proc, steam, cool, kiln, light, pump_fans, solar_heat, ind_boiler, ict] autoproducer"},{"location":"visitor/structure/industry/#provided#parameters","title":"Provided parameters","text":"<p>Generally defined parameters are used in industry to provide the data. More details on parameters can be found in the relevant section of the documentation. In industry, only demand time series data are provided in a simplified manner. In SEDOS, no variation of production quantity is considered depending on temporal data. The demand profile is simply a normalized fraction of 1, which is calculated by dividing 1 by 8760 for the value of an hourly timeslice.</p>"},{"location":"visitor/structure/industry/#general#modeling#approach","title":"General modeling approach","text":"<p>The industry sector has been classified into 12 major branches, with detailed modeling applied to eight of them, including automotive, cement, chemicals, glass and ceramics, iron and steel, non-ferrous metals, and paper. The remaining four branches food and tobacco, rubber and plastic, metalworking, and machinery equipment are included in the model structure in a simplified manner. Figure 1 depicts a comprehensive overview of the representation of the industrial sector,including the 11 branches, their main exogenous demand products,and the considered existing and relevant novel production routes for each of those demands. The inclusion of self-generation technologies, particularly for electricity, is a key component of the industry model structure. This model differentiates between externally supplied electricity and self-generation within the industry, providing insight into energy generation-related investments and potential grid infrastructure needs. Self-generation technologies are used across the entire industrial sector, with no regard for industry branch specificity.</p> <p> Figure 1: Categorization of the industry subsectors (dark gray), its products (light gray) and the possible production routes (blue). are modeled in an aggregated manner. *Food and tobacco, rubber and plastic, metalworking and machinery equipment industries are modeled individually yet in a simplified manner.Abbreviations: LCV: Light Commercial Vehicle; HCV: Heavy Commercial Vehicle; ICEV: Internal Combustion Engine Vehicle; PHEV: Plug-in Hybrid Electric Vehicle; BEV: Battery Electric Vehicle; FCEV: Fuel Cell Electric Vehicle. Source: Reveron Baecker, B. et al. (2024) \"Comprehensive and open model structure for the design of future energy systems with sector coupling\"</p>"},{"location":"visitor/structure/industry/#automobile#industry","title":"Automobile Industry","text":"<p>The automobile industry in SEDOS consists of energy consumption, techno-economic and emission data to produce automobiles in Germany. First, the types of automobiles are divided based on usage into passenger cars (PC), light commercial vehicles (LCV), and heavy commercial vehicles (HCV). Then these are also subdivided into based on drive types. So four different types of passenger cars are considered: internal combustion engine vehicles (ICEV), plug-in hybrid electric vehicles (PHEV), battery electric vehicles (BEV), and fuel cell electric vehicles (FCEV). Light commercial vehicles and heavy commercial vehicles are categorised into internal combustion engine vehicles (ICEV), battery electric vehicles (BEV), and fuel cell electric vehicles (FCEV). As per category of each automobile, production volume in million units is provided as an exogenous demand.\u00a0 The complex production process chains of the above-mentioned automobiles are portrayed through aggregated processes such as the parts production process, battery production, painting, and assembly in energy system model. The parts production process represents energy consumption data of most of the energy-intensive processes to produce components or parts of automobiles. Parts production processes hold aggregated energy consumption data for metal forming (stamping, extruding, casting, drawing, machining, forging), polymer forming (injection molding, compression molding, blow molding, extruding, calendering), glass and carbon fiber reinforced plastic fabrication, welding, and others. Electricity and process heat (400\u20131250 \u00b0C) as input commodities flow into the part production process. Different process heat technologies, such as furnaces based on energy carriers, are available to generate process heat for the parts production process. The battery production process includes energy consumption of drying, dry room, notching, stacking, final sealing, and other processes to produce the battery. Electricity and steam (110-200 \u00b0C) are input commodities for battery production. The energy consumption of pretreatment, painting, undersealing, cavity protection, drying, and other processes is depicted by the painting process, where electricity, hot water (up to 60 \u00b0C), and steam (110-200 \u00b0C) are input commodities for painting processes. Similar to technologies for process heat, techno-economic data for hot water and steam generation technologies are prepared and made available accordingly. Finally, the assembly process completes the chain by producing exogenous demand (automobile). The simplified process chain of automobile production processes is depicted in Figure 2.</p> <p> Figure 2: Simplified representation of Automobile industry process chain.</p> <p>Parts production, battery production, painting, and assembly processes are distinguished and prepared for each automobile type as categorized so that the energy consumption burden is specific to each automobile type. It is important because energy consumption varies depending on the automobile type, as the size, components, and materials of the automobile are different for individual automobile types. During the data preprocessing, these factors are considered, and data are processed accordingly. Which means required energy consumption in SEDOS data to produce parts for internal combustion passenger car (ICEV) is different than any other different automobile whether it is passenger car (PHEV, BEV or FCEV) or commercial automobile (LCV or HCV). This approach is also true for battery production, painting and assembly process so that energy requirements to produce automobile specific to each category. An overview of the passenger car production chain in modeling schema follows in figure 3, with distinguished production processes based on automobile type.</p> <p> Figure 3: Modeling schema of passenger car production chain.</p> <p>Input commodity flows into the processes are given in petajoules (when a commodity is an energy carrier) and in million units (when a commodity is material, e.g., a battery or parts) per million units of output. No emissions are assumed in these processes.\u00a0 Emission occurs in the processes that generate process heat, steam, hot water, and space heat, depending on the technology. Input flow for these heat generation technologies is given in petajoules (PJ) per PJ output. As an example, for a gas boiler whose efficiency is considered 85 percent, the input and output flow conversion factors are given as follows:</p> <pre><code>        input (1 PJ) -&gt; boiler -&gt; output (0.85 PJ) + emissions \n        sec_methane (1 PJ) -&gt; boiler -&gt; iip_auto_steam (0.85 PJ) + emi_co2_ind (55.8 Kt) + \n                                        emi_ch4_ind (0.002 Kt)  + emi_n2o_ind (00005 Kt)\n</code></pre> <p>Combustion emission coefficients are provided in terms of input flow and in thousand tonnes (Kt) per PJ. Base year processes with existing capacity and best available and innovative technologies as new invest processes are also introduced, where it is assumed that base year processes stock decreases linearly and new processes can take place with given investment cost. To summarize the modeling approach of the automobile industry process chain, process heat, steam, hot water, and space heat are produced by respective technologies. Then the parts production process produces parts (e.g., iip_auto_parts_bev) for a specific automobile by consuming energy (iip_auto_heat_proc and sec_elec_ind), then the parts (e.g., iip_auto_parts_bev) go into the painting process alongside energy carriers (iip_auto_hot_water, iip_auto steam, and sec_elec_ind) and produce painted commodities for the specific automobile (e.g., iip_auto_painted_bev). The battery production process for the specific automobile produces batteries as an output with the input flow of steam and electricity (iip_auto_steam and sec_elec_ind). At the end of the process chain, painted automobile commodities(e.g., iip_auto_painted_bev), batteries for the specific automobile (e.g., iip_auto_btry_pc_bev), energy carriers(iip_auto_space_heat and sec_elec_ind), and other commodities such as material handling and compressed air(iip_auto_mcmp) as well as HVAC and lighting (iip_auto_hvlt) are taken as input in the assembly process,and final exogenous demand is produced as output (e.g. exo_auto_pc_bev).</p>"},{"location":"visitor/structure/industry/#cement#industry","title":"Cement Industry","text":"<p>Cement production is modeled through a series of aggregated processes representing its three main production steps: raw material preparation, clinker production, and cement production (finishing). Each of these aggregated steps features different technology levels to reflect current practices and future innovation. For each of the three steps, a base year process (2021) and an upgrade process to Best Available Technology (BAT) standard are considered. The raw material preparation process encompasses the grinding and homogenization of raw materials (such as limestone and clay) into raw meal. This process primarily consumes electricity. Clinker production is the core and most energy-intensive stage, involving the rotary kiln furnace and subsequent clinker cooling. This stage is crucial not only for its high energy demand but also for the significant process emissions of CO2 released from the calcination of limestone, in addition to combustion emissions from fuels. To address these, beyond the base and BAT rotary kiln technologies, the model includes an additional five innovative clinker production processes:</p> <ul> <li>A retrofit of the BAT rotary kiln with carbon capture (oxyfuel capture), specifically designed to capture both combustion and process CO2 emissions. For this investment, investment costs and emissions factors are adjusted to reflect the capture process and the resulting captured CO2.</li> <li>A rotary kiln option utilizing CO2 for CO2-curing cement, representing a carbon capture and utilization (CCU) pathway.</li> <li>A kiln incorporating an electric pre-calciner, enabling a shift of a portion of the thermal energy demand to electricity.</li> <li>A pathway focusing on low-limestone clinker production using adapted OPC (Ordinary Portland Cement) equipment, which inherently reduces process CO2 emissions.</li> <li>A fully electric kiln, representing a transformative shift to electricity as the primary heat source for clinker production.</li> </ul> <p>Finally, the cement production (finishing) process involves the grinding of clinker and the integration of additives to produce the final cement product, primarily consuming electricity. The finished cement product is then an exogenous demand that the model must satisfy. The complex production process chains described above are aggregated within the model for streamlined analysis. For instance, the clinker production processes represent the combined energy consumption and emissions associated with the kiln operation, including heat supply. Electricity and various fuels (coal, heavy fuel oil, biomass, sewage sludge) are input commodities into these production processes. While process emissions are directly attributed to the clinker production process itself, combustion emissions are linked to the specific fuel inputs. High-temperature waste heat is also an output from clinker production, which can be utilized elsewhere in the energy system. No negative emissions are assumed directly within the basic production processes themselves, but are explicitly handled by the specialized carbon capture technology (ind_cement_rk_cc_2) where captured CO2 is routed for storage (emi_co2_neg_fuel_cc_ind), contributing to the overall climate neutrality target. </p> <p> Figure 4: Simplified representation of Cement Industry process chain.</p> <p>Each of these production processes (raw material preparation, clinker production, and cement finishing) is defined with specific techno-economic data. Base year processes are assumed to have existing capacity that decreases linearly over time, while BAT and innovative technologies are introduced as new investment options with their respective investment costs and operational costs.</p>"},{"location":"visitor/structure/industry/#chemical#industry","title":"Chemical Industry","text":"<p>The chemical industry in SEDOS covers the data set of chemical industry production in Germany to be utilized in an energy system model.  Hundreds of different chemical processes are in operation to produce thousands of different chemicals, which means the production path of the chemical industry is complex.  The data set and the modeling approach of the chemical industry can be differentiated in terms of the exogenous demand of the chemical industry. The basic chemicals- chlorine, ammonia, methanol, olefins (ethylene, propylene, butadiene), and aromatics (benzene, toluene, xylene) make up the largest share of the chemical industry. The exogenous demand for these basic chemicals is given in million tons (Mt), so the energy consumption and techno-economic data are directly related to the production volume of these basic chemicals. Then, the rest of the chemical industry demand is represented by the energy service demand, which is given in Petajoule (PJ).  The chemical industry heavily relies on fossils, both for energy and feedstock, aka non-energetic consumption.  In SEDOS chemical industry data, the flow of energy and feedstock into processes to produce chemicals is distinguished, where it is significant. That means feedstock flows separately integrated not only for carbon-contained fossil feedstocks (e.g. natural gas, naphtha, heavy fuel oil, etc) but also alternative low-carbon or green feedstocks (e.g. hydrogen from electrolysis, green methanol). On the other hand, feedstock flow for chlorine production, nitrogen as feedstock in the Haber-Bosch process, or water in the electrolysis process are not included in this work. The emission from fuel combustion and the emission from feedstocks or process-related emissions are categorized as combustion and process emissions, respectively. The combustion emission is usually input-specific and process emission is related to output. Techno-economic data are provided for conventional technologies, best available technologies (BAT), and innovative technologies accordingly. Use of captured Carbon-di-oxide (CO2) as feedstock is also enabled with carbon-capture technologies, and those captured CO2 are made available to be utilized as feedstock through the delivery process (helper_co2_delivery).  Relevant technologies are provided to produce hydrogen, which will be used as feedstock in the chemical industry to produce ammonia and methanol. The hydrogen production technologies and hydrogen commodities names are created accordingly, considering hydrogen as input flow into the methanol synthesis process and Haber Bosch process, respectively. The ammonia production modeling schema is presented in Figure 5. </p> <p> Figure 5: Modeling approach of ammonia production process chain.</p> <p>Hydrogen commodities for methanol production are specified variably, whether the hydrogen (iip_chemi_meoh_f_h2) is generated from fossil feedstock (natural gas, heavy fuel oil) or biomass or the hydrogen (iip_chemi_meoh_h2) is green hydrogen. Two different methanol commodities are introduced, one (exo_chemi_methanol) represents exogenous methanol demand and another (iip_chemi_methanol) can be used further in the chemical industry as feedstock into methanol-to-olefins or methanol-2-aromatics processes. High-value chemical production processes are differentiated to satisfy the exogenous demand for aromatics and olefins. Figure 5 shows the modeling approach of exogenous demand for methanol and methanol flow as feedstock for high-value chemicals production, including a simplified feedstock flow of CO2. </p> <p> Figure 6: Modeling approach of methanol and high value chemicals production process chain.</p> <p>The production volume of ethylene is considered to represent the exogenous olefins demand due to the coupled production of conventional process (steam cracking).  Processes and energy service commodities- steam (iip_chemi_steam), process heat(iip_chemi_process_heat), other processes(iip_chemi_processes_others), electro-chemicals (iip_chemi_electro_chem) and machine drive (iip_chemi_machine_drive)  are introduced accordingly to meet the exogenous energy service demand (exo_chemi_others) of rest of the chemical industry. </p>"},{"location":"visitor/structure/industry/#glass#industry","title":"Glass Industry","text":"<p>The German glass industry module within the SEDOS is categorized into four distinct branches based on the type of glass produced: hollow glass (container glass), flat glass, fiber glass, and special glass. Each branch is modeled with its specific production processes and technological pathways. The complex production process chains for each glass type are portrayed through processes within the energy system model. For hollow glass and flat glass, the production chain is typically disaggregated into three or four primary stages: batch preparation, melting, forming, and, for flat glass, an additional finishing (annealing) step. For fiber glass and special glass, the production is represented by aggregated production processes, encompassing all stages from raw material processing to final product. For the base production steps across all branches, a base year process (2021) is included, representing typical technology and efficiency levels. Additionally, an investment option into the Best Available Technology (BAT) standard is provided for most stages, offering more efficient and advanced current technologies for new investments. Melting is the most energy and emission intensive stage in glass production. The model captures different melting technologies and innovative pathways:</p> <ul> <li>Recuperative and regenerative furnaces: These represent common thermal melting technologies for hollow and flat glass.</li> <li>Full electric melting: An innovative process route is included for the melting step across hollow and flat glass, allowing melting to be achieved primarily or entirely using electricity.</li> <li>Carbon capture integration: To address CO2 emissions, particularly for hollow glass, further investment steps are available to integrate carbon capture (oxyfuel capture) technology with both recuperative and full electric melting processes. This allows for the capture of CO2 from the melting process, which includes both combustion emissions and, importantly, inherent process emissions that arise from the decomposition of raw materials like carbonates in the glass batch. For fiber glass and special glass, the aggregated production processes also feature base, BAT, and specific electric furnace options, indicating pathways for deep decarbonization through electrification. Useful outputs, such as high-temperature waste heat, are also tracked for potential usage within the overall energy system. The demand for each type of glass (e.g., exo_glas_cont for container glass, exo_glas_flat for flat glass, exo_glas_fibe for fiber glass, exo_glas_spec for special glass) is provided as an exogenous demand that the model must satisfy.  The process chains for each glass industry branch, illustrating the various technological pathways and energy flows, are depicted in the following figures:</li> </ul> <p> Figure 7: Reference Energy System for Hollow Glass (Container Glass).</p> <p> Figure 8: Reference Energy System for Flat Glass production process chain.</p> <p> Figure 9: Reference Energy System for Fiber Glass and Special Glass production processes.</p> <p>Base year processes are assumed to have existing capacity that decreases linearly over time, while BAT and innovative technologies are available as new investment options to drive the decarbonization pathway.</p>"},{"location":"visitor/structure/industry/#iron#and#steel#industry","title":"Iron and Steel Industry","text":"<p>The Iron and Steel industry module distinguishes between existing and innovative production routes, reflecting the complex pathways for decarbonization in this energy-intensive sector. The core of steel production in the model is divided into two primary conventional routes: the blast furnace-basic oxygen furnace (BF-BOF) route and the electric arc furnace (EAF) route. Additionally, two crucial innovative production routes are considered: direct reduced iron (DRI) route and hydrogen direct reduced iron (H-DRI) route. The specific production steps and technologies vary significantly depending on the chosen route. For the blast furnace-basic oxygen furnace (BF-BOF) route, which is the predominant current method for primary steel production, five distinct aggregated steps have been considered:</p> <ul> <li>Coking plant production: Converts coal into coke, a necessary reducing agent and fuel for the blast furnace.</li> <li>Sinter production: Agglomerates fine iron ore particles into larger pieces (sinter) suitable for the blast furnace.</li> <li>Blast furnace (BF): Reduces iron ore (and sinter) using coke to produce hot metal (molten iron).</li> <li>Oxygen furnace (BOF): Converts hot metal from the blast furnace into crude steel by blowing oxygen through it to remove impurities.</li> <li>Casting plant &amp; hot rolling mill: Shapes the crude steel into semi-finished or finished steel products.</li> </ul> <p>Maintaining the modeling standard, each of these base processes within the BF-BOF route has the possibility to be replaced by a Best Available Technology (BAT) standard process. On top of these, the blast furnace process, being a significant source of emissions, features two further innovative process investment options for carbon capture:</p> <ul> <li>Amine capture (advanced solvent): Represents a post-combustion capture technology applied to the blast furnace gas.</li> <li>Vacuum pressure swing adsorption (VPSA): Another carbon capture technology, specifically for CO2 separation from blast furnace top gas.</li> </ul> <p>The second existing route, the electric arc furnace (EAF) route, is characterized by its flexibility in using scrap metal. It consists of three main aggregated processes:</p> <ul> <li>Iron scrap source: Represents the sourcing and preparation of iron scrap as the primary feedstock. This process contains no economical information and does not account for any energy consumption, but rather is used to limit the availability of steel scrap.</li> <li>Electric arc furnace (EAF): Melts iron scrap using electricity to produce crude steel.</li> <li> <p>Casting plant &amp; hot rolling mill: Similar to the BOF route, shapes the crude steel into final products. For the direct reduced iron (DRI) route, which is considered an innovative process for primary steel production, four production steps are modeled:</p> </li> <li> <p>Iron pellets production for DRI: Prepares iron ore into pellets suitable for direct reduction.</p> </li> <li>Sponge iron production for DRI: Produces sponge iron (DRI) from iron pellets, typically using natural gas as a reducing agent.</li> <li>Electric arc furnace for DRI: Processes the sponge iron in an electric arc furnace to produce crude steel.</li> <li>Casting plant &amp; hot rolling mill: Shapes the crude steel.</li> </ul> <p>Similarly, the hydrogen direct reduced iron (H-DRI) route represents a major decarbonization pathway. It consists of equivalent processes to the DRI route but with the necessary techno-economic adjustments to primarily use hydrogen as the energy carrier and reducing agent. The process chains for the iron and steel industry, illustrating the various technological pathways and energy flows, are depicted in the following figure:</p> <p> Figure 10: Reference Energy System for the Iron and Steel Industry.</p> <p>Base year processes have existing capacities that decrease linearly over time, while BAT and innovative technologies are available as new investment options with their respective investment costs and operational costs.</p>"},{"location":"visitor/structure/industry/#non-ferrous#metals#industry","title":"Non-ferrous metals Industry","text":"<p>The non-ferrous metal industry module within the SEDOS focusses on aluminum and copper. The model aims to portray the sector's transformation towards climate neutrality by 2045, accounting for both primary and secondary (recycled) production routes and their respective technological advancements.</p>"},{"location":"visitor/structure/industry/#aluminum#production","title":"Aluminum Production","text":"<p>Aluminum production in the model is primarily divided into three main process stages: alumina production, primary aluminum production (electrolysis), and secondary (recycled) aluminum production.</p> <ul> <li>Alumina production: This initial stage involves the processing of bauxite ore to produce alumina (aluminum oxide), typically through the Bayer process. The model includes both a base and a Best Available Technology (BAT) process for alumina Bayer, primarily consuming electricity, natural gas, heavy fuel oil, and steam.</li> <li>Primary aluminum production (Hall-Heroult): This is the most energy-intensive step, where alumina is converted into aluminum metal through electrolysis in Hall-Heroult cells. The module captures both a Base and a BAT Hall-Heroult process. In addition, a novel Hall-Heroult process with innovative anode wett cathodes is included, representing a next-generation technology designed to improve efficiency and potentially reduce emissions from the electrolysis process.</li> <li>Secondary (recycled) aluminum production: This route involves melting aluminum scrap to produce recycled aluminum. The model distinguishes between a base and a BAT recycled production process, which are typically less energy-intensive and have lower direct emissions compared to primary production. The source process for aluminum scrap contains no economical information and does not account for any energy consumption, but rather is used to limit the availability of aluminum scrap.</li> </ul> <p>The Hall-Heroult process is a significant source of process emissions (emi_co2p_ind) from the anode consumption, in addition to combustion emissions. The module also tracks the generation of high-temperature waste heat (sec_waste_heat_high_aluminum).  The process chain for aluminum production, illustrating the various technological pathways and energy flows, is depicted in the following figure:</p> <p> Figure 11: Reference Energy System for the Aluminum production process chain.</p>"},{"location":"visitor/structure/industry/#copper#production","title":"Copper Production","text":"<p>Copper production in the model also distinguishes between primary copper production and secondary (recycled) copper production.</p> <ul> <li>Primary copper production: This route involves smelting and refining copper ores. The model includes base and Best Available Technology (BAT) processes for primary copper production. An innovative copper electrowinning process is also included, representing a more energy-efficient and cleaner method for copper refining, which relies heavily on electricity. </li> <li>Secondary (recycled) copper production: This route involves melting and refining copper scrap. The model includes base and BAT processes for secondary production, drawing input from copper scrap. The source process for copper scrap contains no economical information and does not account for any energy consumption, but rather is used to limit the availability of copper scrap. The process chain for copper production, illustrating the various technological pathways and energy flows, is depicted in the following figure:</li> </ul> <p> Figure 12: Reference Energy System for the Copper production process chain.</p>"},{"location":"visitor/structure/industry/#paper#industry","title":"Paper Industry","text":"<p>The pulp and paper Industry branch within the specifically differentiates between the production of high quality paper and low quality paper, reflecting their distinct production routes and energy intensities. Paper production in the model is generally broken down into two main stages: pulp production and paper production (finishing).</p> <ol> <li> <p>Pulp production: This initial stage involves the conversion of raw materials into pulp. The model accounts for three distinct pulp production routes, each with its base and Best Available Technology (BAT) process options:</p> <ul> <li>Chemical pulp production: This route involves chemical processes to separate cellulose fibers from wood, producing pulp.</li> <li>Mechanical pulp production: This route mechanically grinds wood to produce pulp, typically resulting in higher yields but lower strength compared to chemical pulp.</li> <li>Recycling pulp production: This increasingly important route processes recycled paper to produce pulp, significantly reducing the demand for virgin wood pulp. The source process for recycled paper contains no economical information and does not account for any energy consumption, but rather is used to limit the availability recycled paper.</li> </ul> </li> <li> <p>Paper production (finishing): Following pulp production, these processes convert the pulp into final paper products. The model differentiates based on the final product quality:</p> <ul> <li>High quality paper production: This process transforms pulp (primarily chemical and/or mechanical pulp) into higher-grade paper products.</li> <li>Low quality paper production: This process uses pulp (often recycled pulp) to produce lower-grade paper products.</li> </ul> </li> </ol> <p>Both high quality and low quality paper production stages also include base and BAT process options, allowing for efficiency improvements and technological upgrades. The production processes also generate waste heat (sec_waste_heat_high_paper), which can be used within the heat sector. Moreover, the production of black liqueur as an energy carrier byproduct of chemical pulp production is accounted for and integrated into the self generation model section. The process chain for the pulp and paper Industry, illustrating the various pulp production routes and paper finishing stages, is depicted in the following figure:</p> <p> Figure 13: Reference Energy System for the Pulp and Paper Industry process chain.</p> <p>Base year processes have existing capacities that decrease linearly over time, while BAT technologies are available as new investment options, enabling the model to explore cost-optimal decarbonization pathways for the sector.</p>"},{"location":"visitor/structure/industry/#rest#of#the#industry","title":"Rest of the Industry","text":"<p>The Rest of the Industry in SEDOS consists of the following industrial branches, as also depicted in the energy balance for Germany:</p> <ul> <li>Food and Tobacco</li> <li>Rubber and Plastics</li> <li>Metal processing</li> <li>Machine manufacturing</li> <li>Other manufacturing</li> </ul> <p>The processes in these industry branches contain detailed information on energy consumption, techno-economic and emission data for the relevant steps in the production of goods. The demand is expressed in Petajoules (PJ) and represents the energy service that amounts to the production within these branches. </p> <p>The Rest of the Industry is modeled using 57 distinct processes, each depicting specific energy applications: machine drives, lighting, information and communication technology (ICT), process heat and process cooling. The total useful energy required for each energy application flows in the demand processes. For process heating a variety of technologies are used, including boilers, kilns, heat pumps, solar heat and heat exchangers. These technologies generate steam, high temperature heat or directly process heat. Heat exchangers are used to transform district heat into process heat.</p>"},{"location":"visitor/structure/industry/#self-generation","title":"Self-generation","text":"<p>The  Self-generation or autoproducer can be distinguished by the sector they are used in and the energy type they are using. They are also split up into already existing autoproducers and autoproducers that will be created in the future. The future technologies are only categorized by the fuel type. Because they can be used in every industry sector, there would be too many individual processes if the were all individual for each sector.  The existing autoproducers are used in five different sectors. In the steel, chemical, food and tobacco, aluminium and paper industry. In the steel industry only cokeovengas is used as an energy carrier. In the chemical industry coal, methane and heavy fuel oil is used.In the food and tobacco industry coal and methane is used. In the aluminium industry only methane is used. In the paper industry coal, methane, stem wood, black liquor, heavy fuel oil and naphtha autoproducers exist. For future autoproducer, the energy carriers are methane, biomass pellets, stem wood, hydrogen, coal, bio and non bio waste, biogas, oil, sewage sludge and black liquor. There are aggregated autoproducers in the model structure as well. These aggregated processes are categorized by their energy carrier. For the existing autoproducers there are for coal ,methane and heavy fuel oil processes combined. In the future autoproducer processes we have small and large coal and small, medium and large methane autoproducers. Those are aggregated to two processes.</p>"},{"location":"visitor/structure/lods/","title":"Levels of Detail (LODs)","text":"<p>As described in Technological Aggregations the SEDOS approach allows the sectors a high flexibility in defining and applying aggregation levels to their model structure.  This means different sectors can customize how they group or detail the information according to their needs. The concept of Levels of Detail (LODs) with aggregation levels, as depicted in the diagram below,  illustrates a structured approach to managing a model structure with different levels of detail without redundancy.</p>"},{"location":"visitor/structure/lods/#design#principles","title":"Design Principles","text":"<ul> <li>Flexible Aggregation: Not every aggregation level needs to include all technologies. This flexibility allows specific levels to focus on the most relevant technologies,  making it easier to streamline information and avoid unnecessary complexity.</li> <li>Building upon Each Other: Aggregation levels can layer on top of one another. Lower levels (like LOD3) provide more granular details, while higher levels (like LOD1) present more aggregated information.  This layered approach ensures that different users or stakeholders can access information at varying degrees of complexity, based on their needs.</li> </ul>"},{"location":"visitor/structure/lods/#examplary#lod#structure","title":"Examplary LOD structure:","text":"<ul> <li>LOD3 (Most Detailed): This level includes individual technologies (Tech 1, Tech 2, Tech 3) in full detail. It represents the most granular level, where each technology is presented independently.</li> <li>LOD2 (Intermediate Detail): This level begins to aggregate some elements, combining \"Tech 3\" with \"Agg 1\" (an aggregated grouping of technologies). LOD2 provides an intermediate level of detail, balancing specificity with some aggregation.</li> <li>LOD1 (Least Detailed): The highest level of aggregation and hence the lowest level of detail. This level provides the most summarized view, ideal for high-level analysis or reporting.</li> </ul>"},{"location":"visitor/structure/mimo/","title":"Multiple Inputs and Outputs","text":""},{"location":"visitor/structure/mimo/#complementarity#vs#substitution","title":"Complementarity vs Substitution","text":"<p>Input and Output commodities can be defined as either complementary or substitutive. </p> <p>If they are defined as complementary, they are linked by a fixed ratio (e.g. the output of electricity from a combustion plant is always linked to emissions). If they are defined as substitutive, they can be linked by a flexible ratio (e.g. the input of a ICEV either based on fossil or synthetic fuels).</p> <p>Additional degrees of freedom within the model are achieved by considering these flexible shares of several input or output commodities in the energy system model. The goal is to model processes that can choose their energy sources endogenously. Considering the previous example, in the most cost-effective system, ICEVs could be supplied by fossil fuels provided by refinery processes or by a  synthetic fuel chain based on electrolyzers and requiring additional electricity generation plants.</p> <p>input_output format conventions in the process set</p> <ul> <li>Enclose substituting inputs or outputs in squared brackets <code>[ ]</code></li> <li>separate complementary inputs or outputs with <code>,</code> (comma)</li> </ul> <p>For example the formatting may look like this:</p> input process output [pri_oil_shale, sec_heating_oil, sec_biodiesel] pow_combustion_st_oil_0_ag sec_elec, emi_co2_f_pow"},{"location":"visitor/structure/mimo/#parameter#input-output#specifications","title":"Parameter Input-Output Specifications","text":"<p>For processes with multiple input and/or output energy vectors it might not always be clear to which energy vector a  parameter column refers. By <code>default</code>, parameters of a process are assigned to the main (first) output of a process from the Process_Set sheet in the  main model_structure.xlsx available on Zenodo. If the default is incorrect or needs to be overwritten, please use the Parameter_Input-Output sheet to specify or reassign  the process parameters\u2019 inputs and outputs. It is for the data providers (WP4-8) to assess whether this is correct for each process with respect to the  modelling. Accordingly, the parameter <code>defaults</code> do not appear in the input_output sheet, but are identified in the data pipeline. </p> <p>Example for parameter input-output specification</p> <p>For example, the costs of an electrolyzer are normally indicated in relation to the input and not to the output, while for most other processes the costs are related to the main output. This exception has to be given as follows:</p> parameter process input output cost_fix_capacity_p x2x_p2gas_aec_1 sec_elec"},{"location":"visitor/structure/model_frame/","title":"Model Base","text":"<p>As a result of thorough discussions in the 3rd working package of the SEDOS project, the following list provides assumptions and requirements to understand the model base.  This sets the basic framework for modeling with the provided model structure with different model generators. The key points of the model base are:</p> <ul> <li>Deterministic model formulation with a Linear Programming Optimization.</li> <li>Intertemporal Time-Span modeling with perfect foresight. Capacity expansion limits have been defined per milestone years.</li> <li>Central planner solving perspective for macro-economic optimization. Business/regulatory aspects are neglected as far as possible.   A consistent Weighted Average Cost of Capital (WACC) of 2% has been defined for all technologies and if necessary, taxes are deducted from the prices.</li> <li>Brownfield approach: Differentiation between existing technology stock (0X) vs new technology expansion (1X).</li> <li>Long-Term time horizon until 2070.</li> <li>Hourly time resolution.</li> <li>The time horizon can optionally be reduced with type weeks, e.g. by applying the time series aggregation tsam tool.</li> <li>The SEDOS data are provided for a 1-region Germany model. Infrastructure costs are estimated for the delivery of relevant commodities.</li> <li>A distinction is made between five commodity categories: primary energy (pri), secondary energy (sec), industrial intermediate products (iip), emissions (emi) and model exogenous energy demand (exo). </li> <li>The exogenous demand in the model is defined in such a way that the model has maximum degrees of freedom to choose between  the technologies to meet the demand. The final energy demand in the system is thus determined endogenously.</li> <li>For the processes, a distinction is made between complementary inputs/outputs with a fixed ratio to each other and  substitutive inputs/outputs with a flexible ratio. This also allows to model processes that can choose their energy sources endogenously.</li> <li>To ease the feasibility of SEDOS-based models, additional aggregation levels are introduced due to the high level of    detail in the sectors. This allows the user to configure their desired levels of detail while focusing on chosen sectors while other sectors can be considered in a simplified version.</li> <li>The European electricity market is considered but modeled in a simplified manner.</li> </ul> <p> The central assumptions are additionally highlighted in the figure below: </p> <p></p>"},{"location":"visitor/structure/network_graph/","title":"Exemplary network graphs","text":"<p>The network graph is designed to be flexible, allowing for the visualization of model structures across different sectors and their interconnections. The figures below illustrate the network graph representation of the SEDOS model structure for 3 different case studies applied within our model frameworks. In the related section of the GUI at the \"Generate Networks\" button the graphs are interactive,  enabling users to zoom, hover for node names, and explore the model structure in greater detail.  Users can customize their view by adjusting sectors, mapping algorithms, or by focusing on specific processes or commodities.</p> <p>Oemof model with focus on the steel industry sector </p> <p>FINE model with focus on the transport sector and its supply processes </p> <p>TIMES model with all sectors and their intercorrelations </p>"},{"location":"visitor/structure/overview/","title":"Overview","text":"<p>The SEDOS focus is on understanding...</p> <ul> <li>...the overall system,</li> <li>...the technical foundation in the sectors,</li> <li>...and the possible relations and interactions due to sector coupling.</li> </ul> <p>The model structure is used to build up energy models in three different frameworks: oemof, FINE and TIMES. Key components of the model structure are defined in this Section. For further information please consult the open-access publication.</p> <p>The different sectors and their general interfaces are shown in the figure below:</p> <p></p>"},{"location":"visitor/structure/transport/","title":"Transport sector","text":""},{"location":"visitor/structure/transport/#naming#convention","title":"Naming convention","text":"<p>The transport sector in the SEDOS dataset is divided into road, water, air and rail modes. The road-based vehicles include light (l), medium (m) and heavy (h) cars and trucks as well as coaches (long distance) and buses (short distance), motorcycles and special vehicles in the agricultural (agri) and construction (const) industries. For waterway transport, the focus is on inland freight shipping. High seas bunkering is not included in the energy balance, because the fuel is consumed outside national borders in international waters, and it is therefore not considered part of domestic energy usage. In the field of aviation, a distinction is made between domestic flights (natio), European flights (europ) and intercontinental (inter) flights and passenger transportation alone is accounted for. Finally, a distinction is made between short-haul (streetcars, shunting operations) and long-haul (long-distance trains) for both passenger (pass) and freight (frei) rail transport. A suitable selection of drive technologies (internal combustion engine vehicle \u2013 ice, hybrids \u2013 hyb, fuel cell electric vehicle \u2013 fcev, battery electric multiple unit meaning a combination of batteries and overhead cables \u2013 bemu, battery electric vehicles \u2013 bev and overhead electric vehicles \u2013 oev) and fuels is combined for all vehicle types and organized as separate processes in the model structure. The nomenclature for process naming follows the system below, that is further explained in Table 1: tra_rail_hyb_pass_short_hydrogen_0.</p> <p>Table 1: Nomenclature for the transport sector process naming.</p> Sector Mode Type (including information on weight) Drive Technology Transported Unit Specification Fuel Stock/Expansion tra road car/lcar/mcar/hcar ice pass long ammonia 0 water truck/ltruck/mtruck/htruck hyb frei short gasoline 1 air bus fcev natio diesel rail motorc bemu europe hydrogen agri bev inter methanol const oev wallbox ethanol engine cng battery lpg inflex lng flex elec g2v kerosene v2g flex (flex fuel using gasoline + ethanol)"},{"location":"visitor/structure/transport/#provided#parameters","title":"Provided parameters","text":"<p>The scalar parameters provided are described in Table 2. </p> <p>Table 2: Scalar parameters provided for the transport sector.</p> Parameter Unit Explanation demand_annual Gpkm, Gtkm Link to projected annual demand for a transport service demand. capacity_p_inst_0 kW Existing power output capacity of a wallbox in a certain year. capacity_p_unit kW/vehicle Fixed installed wallbox capacity per unit. capacity_e_inst_0 kWh Existing fleet battery capacity. capacity_e_unit kW/vehicle Capacity per fixed storage unit. capacity_tra_inst_0 vehicles Number of vehicles (middle of year). capacity_tra_min vehicles Minimum expansion of fleet per vehicle type per process. Based on minimum market share range, stock, and transport service demand. capacity_tra_max vehicles Maximum expansion of fleet per vehicle type per process. Based on maximum market share range, stock, and transport service demand. conversion_factor_commodity kWh, pkm, tkm Commodity-specific conversion factor (multiplication of input and output factors yields the efficiency of the process). ef_commodity_emission kg/MWh Commodity-specific emission factor. exo_commodity Gpkm, Gtkm Projected annual demand for a transport service demand. lifetime a Technical lifetime of a process. mileage km/(vehicle*a) Yearly mileage of a vehicle. market_share_range [percent_min, percent_max] Range of market share for vehicle expansion. occupancy_rate persons/vehicle Occupancy rate of a vehicle. tonnage tons/vehicle Tonnes transported per vehicle. share_tra_charge_mode - Proportion of fleet that load with a specific charge mode. cost_inv_tra EUR/vehicle Investment costs for new vehicle unit. cost_fix_tra EUR/(vehicle*a) Operation independent costs for existing and new vehicle units. cost_var_tra EUR/pkm, EUR/tkm Variable costs per pkm/tkm. cost_inv_p EUR/kW Investment costs for new wallbox power output capacity. wacc percent Percentage of costs for capital after taxes. Used to calculate annuity factor for investment costs. efficiency_sto_in percent Energy efficiency of power input. efficiency_sto_out percent Energy efficiency of power output. sto_self_discharge percent/h Storage losses over time. <p>All costs are presented excluding taxes and subsidies, based on 2021 price levels.</p>"},{"location":"visitor/structure/transport/#general#modeling#approach","title":"General modeling approach","text":"<p>When modeling all vehicles apart from battery electric cars and trucks, a simplified and inflexible approach is used. This means that these vehicles have a fixed, exogenously specified driving profile and the fuel tank is not taken into account as a possible buffer between fuel energy demand and the provision of driving power. This is based on the assumption that, in contrast to BEVs, the refueling process is evened out across the fleet and takes place during the driving process rather than being decoupled during parking times. In addition, the fuel supply chain is seen as having a high storage capacity that is not available in the electricity grid in the same form, which is why a detailed consideration of batteries and the charging process is considered for BEVs (trucks and cars). </p> <p>In the case of inflexible vehicles, only the composition of the fleet is optimized, i.e. the choice of drive technology and fuel type for medium sized cars. The modal split, i.e. the distribution of demand between vehicle types (hcars, mcars, lcars, buses, trains, etc.), is specified in exogenous demand variables, e.g. exo_road_car_pkm. The general modeling follows the scheme below: </p> <p></p> <p>Figure 1: Modeling schema for vehicles without explicitly modelled storage/tank.</p> <p>The input energy is transformed into the output commodities via indicators. Accordingly, the ratio of input to output flows is specified, taking into account the occupancy rate for passenger transport and the tonnage for freight transport in the information on transport services. For example the energy balance of a diesel car: </p> Input Output Parameter Name sec_diesel exo_road_car_pkm            +   emi_co2_f_tra Value Example 1 kWh 10 vehicle_km * 3 p/vehicle +      0.005 t <p>is transformed to</p> Input Output Parameter Name sec_diesel exo_road_car_pkm    + emi_co2_f_tra Value Example 1 kWh 30 pkm              +   0.005 t <p>This means that the direct efficiencies are not given as a percentage but rather by indicator ratios.</p>"},{"location":"visitor/structure/transport/#battery#electric#vehicle#bev#modeling#approach","title":"Battery electric vehicle (BEV) modeling approach","text":"<p>The detailed modeling of the BEVs (cars and trucks) provides for a separation of the fleet into three parts representing the charging modes: user-controlled charging (no optimization possible), system-controlled charging and system-controlled charging with the option of feeding back into the grid (see dark blue boxes in Figure 2). Their ratio is given exogenously in form of the parameter share_tra_charge_mode and gives the percentage of the fleet charging in the respective mode. In 2021 it is assumed that all vehicles charge inflexibly (e.g. share_tra_charge_mode for tra_road_hcar_bev_pass_battery_infl_uni_0 is 100 %). In the scenario years the percentage of inflexible charged vehicles decreases because of electricity price incentives (e.g. share_tra_charge_mode for tra_road_hcar_bev_pass_battery_flex_uni_1 is 65 %). In the data the electric vehicle process (and with it each of the charging modes) is furthermore divided into 3 sub-processes: wallbox, battery and engine that also contains overarching parameters, such as occupancy rate or tonnage.</p> <p>This results in a differentiation of 10 processes for each electric vehicle type: 3 modes times 3 sub-processes plus a further wallbox process, which represents the feed-in of electricity back into the grid. Since the modeled wallbox, for example, does not differ in any of the cases, there is a certain redundancy of information, but this is necessary because the boundary conditions differ in the modeling and therefore these sub-processes can this way described accurately.</p> <p>The resulting indicator ratios are as follows and can also be found in Figure 2:</p> <p></p> <p>Figure 2: Modeling schema for electric vehicles with flexible charging. Illustrating the interaction between the wallbox component (1), the battery (2), and the engine (3), along with the energy flows and the reverse electricity flow back to the grid (2.1) in the form of Vehicle-to-Grid (V2G) functionality.</p> <ol> <li> <p>Wallbox efficiency (sec_elec * \u0273wallbox_G2V = sec_elec_mcar_flex_bi):                         sec_elec    --&gt; = sec_elec_mcar_flex_bi   </p> </li> <li> <p>Charging/Discharging effiency (sec_elec_mcar_flex_bi * \u0273battery_in * \u0273battery_out = sec_elec_mcar_flex_bi):                         sec_elec_mcar_flex_bi --&gt; sec_elec_mcar_flex_bi     Grid Feed-in (sec_elec_mcar_flex_bi * \u0273wallbox_V2G * \u0273battery_in* \u0273battery_out = sec_elec):                         sec_elec_mcar_flex_bi --&gt; sec_elec</p> </li> <li> <p>Engine efficiency (sec_elec_mcar_flex_bi * \u0273engine * occupancy_rate = exo_road_car_pkm):                         sec_elec_mcar_flex_bi --&gt; exo_road_car_pkm</p> </li> </ol>"},{"location":"visitor/structure/transport/#time#series#provided","title":"Time series provided","text":"<p>There are four kinds of time series given in order to describe and limit the transport sectors dispatch (see Table 3):</p> Name Type Unit demand_timeseries Fixed Normalized sum 1 sto_min_timeseries Lower Normalized between 0 and 1 as fraction of SOC sto_max_timeseries Upper Normalized between 0 and 1 as fraction of SOC availability_timeseries_fixed / availability_timeseries_max Fixed/Upper Normalized to maximum <p>All vehicles have to serve a given demand profile (demand_timeseries) that describes the normalized fraction of the scalar annual demand (demand_annual) that is given in the tra_scalar table. For cars and trucks, this demand profile is a driving profile, as it is assumed that the refueling of the fuel vehicles is balanced across the fleet and takes place during the driving time. For the flexibly modeled e-vehicles, the driving profile specifies when the storage tank is discharged and is a boundary condition for optimization. Overhead line trains also have a driving profile as a demand time series, as the energy demand occurs at the same time as the vehicle is in motion. For all other vehicles (buses, ships, airplanes, special vehicles), however, a tank profile is specified, as it is assumed that the driving process is decoupled from the tank process in terms of time. The vehicles are refueled at the depot after the working day. Refueling is therefore more concentrated in the afternoon. </p> <p>The flexibly modelled vehicles (cars and trucks) are furthermore constrained. The SOC of the vehicle batteries are restricted by a band (sto_max_timeseries/sto_min_timeseries) that represents the maximum/minimum SOC that the fleet should be able to provide in order to fulfill user demands (see Figure 2). </p> <p></p> <p>Figure 3: Exemplary development of the battery SOC over one day. Source: Miorelli, F. (2024): \u201cAggregation and normalisation methods in venco.py\u201d \u00a9 DLR | CC BY 4.0.</p> <p>The charging power of an electric vehicle is limited by the maximum output capacity of the wallbox when charging a single vehicle. It furthermore varies over time when considering a whole fleet since the number of vehicles connected to the grid is not constant during the day. To take this circumstance into account the maximum power a single car can be charges with is given exogeniously with the parameter capacity_p_unit, describing the maximum power of a wallbox. The percentage of the fleet that can charge with this maximum power at each point of time is represented by the time series availability_timeseries_max. In order to calculate the maximum power the fleet can charge at a certain point of time, the time normalized time series needs to be multiplied by capacity_p_unit (individual wallbox capacity) as well as with the vehicle number.</p> <p>As an exception, the inflexible charging vehicles (e.g. tra_road_mcar_inflex_uni) are not limited by a maximum charging capacity, but the charging capacity is specified by a fixed time series (availability_timeseries_fixed). There is no optimization intended. Otherwise, the principle is identical.  All BEV-profiles are calculated with the DLR open source tool venco.py. The tool takes assumptions for a charging infrastructure development as well as a large number of trip data by the [MiD] (https://www.mobilitaet-in-deutschland.de/archive/pdf/MiD2017_Tabellenband_Deutschland.pdf) /[KiD] (https://www.forschungsinformationssystem.de/servlet/is/503443/) as inputs. </p>"},{"location":"visitor/structure/x2x/","title":"X2X sector","text":""},{"location":"visitor/structure/x2x/#naming#convention","title":"Naming convention","text":"<p>The X2X sector in the SEDOS dataset contains technologies that are traditionally refered to as Power-to-X processes, which are intermediate conversion processes between the supply side (e.g., electricity supply) and the demand side, e.g., transport sector. Due to this intermediate role within the model structure, besides PtX means of providing fuels and other commodities to the sectors that satisfy end demands, also conventional ways of fuel provision and means to provide certain commodities requested by other sectors are allocated to the X2X sector. This entails e.g., refineries, biofuels and commodity imports. The nomenclature of the processes is based on the conversion type of the process. For example, processes that convert power into a gaseous product, so called Power-to-Gas processes are identified with the abbreviation p2gas. If another commodity than power is used as an input to provide a gaseous product, this turns into x2gas indicating the variable product input. Additionally, import processes (import) and fuel delivery processes (delivery) are separated from the rest of the naming logic. The categorization by conversion type is followed by an abbreviation of the process name. The end of the process name is defined by either 0 or 1 for existing (stock) processes or new (expansion) processes if that applies for the process (e.g., 0/1 differentiation would not make sense for import processes). Table 1 shows the different categories present within the X2X sector:</p> <p>Table 1: Nomenclature for the X2X sector process naming.</p> Sector Mode Process Name Stock/Expansion x2x p2gas ... 0 x2gas ... 1 g2p ... x2liquid ... other ... import ... delivery ... storage ..."},{"location":"visitor/structure/x2x/#provided#parameters","title":"Provided parameters","text":"<p>Conversly to other sectors in the SEDOS model structure, the X2X sector has no sector-specific scalar parameters but only generally defined parameters. Please refer to the corresponding section in the documentation for more information. All costs are presented excluding taxes and subsidies, based on 2021 price levels. The X2X sector has only scalar data and no time series data as it serves as an intermediate sector connecting supply and demand (which themselves have time series data).</p>"},{"location":"visitor/structure/x2x/#general#modeling#approach","title":"General modeling approach","text":"<p>When modeling X2X processes, for most processes a simplified approach is used where the conversion ratios between input and output of a process are fixed. As the X2X sector contains very different technologies, this does not apply for all processes. Therefore, a subset of processes where the modeling approach needs more explanation are described in the following.</p>"},{"location":"visitor/structure/x2x/#refineries#and#fischer-tropsch#process","title":"Refineries and Fischer-Tropsch process","text":"<p>Refineries and the Fischer-Tropsch process are used to generate a variety of fuels within the system. The product distribution in real plants can vary significantly based on the process setup which is driven by the requested demand. Therefore, fixed product shares would not depict reality very well and would not model the flexibility of these plants accurately. Therefore, refineries and FT plants are modeled as multi-input multi-output components (refer to chapter Model Base for more information about this process type) with defined maximum and minimum flow shares for every possible output commodity. </p>"},{"location":"visitor/structure/x2x/#steam#reformer","title":"Steam Reformer","text":"<p>Steam reformers can be used in the system to generate hydrogen from natural gas. However, to give the model the possibility to use the syngas as well prior to hydrogen cleanup for processes that require syngas (e.g., Fischer-Tropsch synthesis or methanol synthesis) the process had to be modeled differently. It was split into two processes (x2x_x2gas_sr_syngas and x2x_x2gas_sr_syngas_psa). The first process (x2x_x2gas_sr_syngas) converts natural gas into syngas. This syngas can either be used in the steam reformer to be further converted into hydrogen or it can be transfered via a helper component to the rest of the energy system as syngas. However, the second part of the process (x2x_x2gas_sr_syngas_psa) is restricted to only use syngas from the steam reformer and not other sources of syngas, as it should only model the decision of the system to use steam reformers for syngas or hydrogen generation and not to serve as an artifical process to convert syngas to hydrogen.</p>"},{"location":"visitor/structure/x2x/#fuel#delivery#markup","title":"Fuel Delivery Markup","text":"<p>As SEDOS is a single-node model, modeling of infrastructure such as fuel delivery needs to be made with certain assumptions and proxys. For fuel deliveries of products which are part of the X2X sector, dedicated delivery processes have been introduced which in general add a markup to the cost of the commodity if it needs to be transported. The markup is calculated based on assumptions of average distance from production facility to consumer.</p>"},{"location":"visitor/structure/x2x/#hydrogen#pipelines","title":"Hydrogen Pipelines","text":"<p>Although most fuels just have a simple markup in SEDOS for their delivery, the situation is different for hydrogen pipelines. There, to take into account that a hydrogen pipeline network first has to be built, hydrogen pipelines are modeled similar to other technologies with investment costs allowing the system to decide on the expansion of the pipeline network. Hydrogen pipelines can either be newly built or retrofitted methane pipelines. The retrofit of methane pipelines is exogenously set based on the total retrofit potential and previous model results and comes at a lower cost compared to newly built pipelines. To account for the variable costs of compression, a conversion factor for electricity demand is introduced.</p>"},{"location":"visitor/structure/x2x/#biofuel#sourcing","title":"Biofuel sourcing","text":"<p>The introduction of biofuels into the system is not modeled on process-detail level. Instead, biofuels are assumed to be produced at a certain price per MWh of fuel, which has been derived from literature values. However, nonetheless they cannot be produced indefinitely. Instead, based on existing biomass potentials for the relevant biomasses to the biofuels, capacity limits have been defined which limit the usage of these biofuels.</p>"},{"location":"visitor/structure/x2x/#negative#emission#technologies","title":"Negative Emission Technologies","text":"<p>An important feature of the X2X sector is that certain technologies can either capture CO2, can generate CO2-neutral fuels or can utilize CO2 in the process. Emissions accounting in SEDOS has been discussed at another point and will not be discussed in detail again here. For imports of synthetic fuels and biofuel sourcing in Germany, negative emissions have to be introduced to balance the fuel-related emissions that are added in the end. This has to be differentiated from CO2 usage, where CO2 can be converted to other products through certain PtX processes. This differentiation is made through different CO2 commodities, where the \"usable\" CO2 can e.g., be provided by direct air capture.</p>"}]}